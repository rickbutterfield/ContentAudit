{"version":3,"file":"overview.element-Dkpz4JhL.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/workspace/views/overview.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, nothing, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { AuditOverviewDto, PageResponseDto } from \"../../api\";\r\nimport ContentAuditWorkspaceContext, { CONTENT_AUDIT_CONTEXT_TOKEN } from \"../workspace.context\";\r\n\r\n@customElement('content-audit-scan-view')\r\nexport class ContentAuditScanViewElement extends UmbElementMixin(LitElement) {\r\n    private auditData: PageResponseDto[] = [];\r\n\r\n    #context?: ContentAuditWorkspaceContext;\r\n\r\n    @state()\r\n    scanRunning?: boolean = false;\r\n\r\n    @state()\r\n    _latestAuditOverview?: AuditOverviewDto;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(CONTENT_AUDIT_CONTEXT_TOKEN, (context) => {\r\n            this.#context = context;\r\n\r\n            this.observe(context.latestAuditOverview, (latestAuditOverview) => {\r\n                this._latestAuditOverview = latestAuditOverview;\r\n            });\r\n\r\n            this.#context.getLatestAuditOverview();\r\n        });\r\n    }\r\n\r\n    startAudit() {\r\n        const eventSource = new EventSource('/umbraco/content-audit/api/v1/start-crawl');\r\n        this.scanRunning = true;\r\n\r\n        eventSource.onmessage = (event) => {\r\n            const data: PageResponseDto = JSON.parse(event.data);\r\n            this.auditData.push(data);\r\n            this.requestUpdate();\r\n        };\r\n\r\n        eventSource.onerror = (error) => {\r\n            if (eventSource.readyState === EventSource.CLOSED) {\r\n                console.log('EventSource connection closed by the server.');\r\n            } else {\r\n                console.error('EventSource encountered an error:', error);\r\n            }\r\n            this.scanRunning = false;\r\n            eventSource.close();\r\n        };\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <div id=\"main\">\r\n                <uui-box headline=\"Latest audit\">\r\n                    <div slot=\"header\">${this.localize.date(this._latestAuditOverview?.runDate!, { dateStyle: 'long', timeStyle: 'short' })}</div>\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button\r\n                            look=\"primary\"\r\n                            @click=${this.startAudit}\r\n                            .state=${this.scanRunning ? \"waiting\" : \"\"}\r\n                        >Run new scan</uui-button>\r\n                    </div>\r\n\r\n                    ${this._latestAuditOverview?.runDate == null ?\r\n                    html`\r\n                        <p>No scan has been run yet</p>`\r\n            : html`\r\n                <p><strong>URLs found: </strong> ${this._latestAuditOverview?.totalPages}</p>\r\n                <p><strong>Pages crawled: </strong> ${this._latestAuditOverview?.totalPagesCrawled}</p>\r\n                <p><strong>Blocked URLs: </strong> ${this._latestAuditOverview?.totalPagesBlocked}</p>\r\n            `}\r\n                </uui-box>\r\n\r\n                <uui-box headline=\"Site health\">\r\n                    <em>Chart showing overall health of site. Based on ahrefs health score? (internal URLs crawled without errors)</em>\r\n                </uui-box>\r\n            </div>\r\n        `\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: var(--uui-size-space-5);\r\n            }\r\n\r\n            #main {\r\n                display: grid;\r\n                gap: var(--uui-size-space-5); \r\n                grid-template-columns: repeat(2, 1fr);\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditScanViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-scan-view': ContentAuditScanViewElement;\r\n    }\r\n}\r\n"],"names":["_context","ContentAuditScanViewElement","UmbElementMixin","LitElement","__privateAdd","CONTENT_AUDIT_CONTEXT_TOKEN","context","__privateSet","latestAuditOverview","__privateGet","eventSource","event","data","error","html","_a","_b","_c","_d","_e","css","__decorateClass","state","customElement","ContentAuditScanViewElement$1"],"mappings":";;;;;;;;;gVAAAA;AAMO,IAAMC,IAAN,cAA0CC,EAAgBC,CAAU,EAAE;AAAA,EAWzE,cAAc;AACJ,UAAA,GAXV,KAAQ,YAA+B,CAAC,GAExCC,EAAA,MAAAJ,CAAA,GAGwB,KAAA,cAAA,IAQf,KAAA,eAAeK,GAA6B,CAACC,MAAY;AAC1D,MAAAC,EAAA,MAAKP,GAAWM,CAAA,GAEhB,KAAK,QAAQA,EAAQ,qBAAqB,CAACE,MAAwB;AAC/D,aAAK,uBAAuBA;AAAA,MAAA,CAC/B,GAEDC,EAAA,MAAKT,GAAS,uBAAuB;AAAA,IAAA,CACxC;AAAA,EAAA;AAAA,EAGL,aAAa;AACH,UAAAU,IAAc,IAAI,YAAY,2CAA2C;AAC/E,SAAK,cAAc,IAEPA,EAAA,YAAY,CAACC,MAAU;AAC/B,YAAMC,IAAwB,KAAK,MAAMD,EAAM,IAAI;AAC9C,WAAA,UAAU,KAAKC,CAAI,GACxB,KAAK,cAAc;AAAA,IACvB,GAEYF,EAAA,UAAU,CAACG,MAAU;AACzB,MAAAH,EAAY,eAAe,YAAY,SACvC,QAAQ,IAAI,8CAA8C,IAElD,QAAA,MAAM,qCAAqCG,CAAK,GAE5D,KAAK,cAAc,IACnBH,EAAY,MAAM;AAAA,IACtB;AAAA,EAAA;AAAA,EAGK,SAAS;;AACP,WAAAI;AAAA;AAAA;AAAA,yCAG0B,KAAK,SAAS,MAAKC,IAAA,KAAK,yBAAL,gBAAAA,EAA2B,SAAU,EAAE,WAAW,QAAQ,WAAW,QAAS,CAAA,CAAC;AAAA;AAAA;AAAA;AAAA,qCAItG,KAAK,UAAU;AAAA,qCACf,KAAK,cAAc,YAAY,EAAE;AAAA;AAAA;AAAA;AAAA,wBAIhDC,IAAA,KAAK,yBAAL,gBAAAA,EAA2B,YAAW,OACxCF;AAAA,2DAENA;AAAA,oDACqCG,IAAA,KAAK,yBAAL,gBAAAA,EAA2B,UAAU;AAAA,uDAClCC,IAAA,KAAK,yBAAL,gBAAAA,EAA2B,iBAAiB;AAAA,sDAC7CC,IAAA,KAAK,yBAAL,gBAAAA,EAA2B,iBAAiB;AAAA,aACpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAwBb;AAvFInB,IAAA,oBAAA,QAAA;AAHSC,EA4EO,SAAS;AAAA,EACrBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYJ;AAnFAC,EAAA;AAAA,EADCC,EAAM;AAAA,GALErB,EAMT,WAAA,eAAA,CAAA;AAGAoB,EAAA;AAAA,EADCC,EAAM;AAAA,GARErB,EAST,WAAA,wBAAA,CAAA;AATSA,IAANoB,EAAA;AAAA,EADNE,EAAc,yBAAyB;AAAA,GAC3BtB,CAAA;AA4Fb,MAAAuB,IAAevB;"}