{"version":3,"file":"status-codes-collection.repository-6Wb47N7q.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/repository/status-codes-collection.server.data-source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/repository/status-codes-collection.repository.ts"],"sourcesContent":["import { UmbCollectionDataSource } from \"@umbraco-cms/backoffice/collection\";\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { AuditService, PageDto } from \"../../../../api\";\nimport { tryExecuteAndNotify } from \"@umbraco-cms/backoffice/resources\";\nimport { ContentAuditStatusCodesCollectionFilterModel } from \"../types\";\n\nexport class ContentAuditStatusCodesCollectionDataSource implements UmbCollectionDataSource<PageDto> {\n    #host: UmbControllerHost;\n\n    constructor(host: UmbControllerHost) {\n\t\tthis.#host = host;\n    }\n\n\tasync getCollection(filter: ContentAuditStatusCodesCollectionFilterModel) {\n\t\tconst { data, error } = await tryExecuteAndNotify(this.#host, AuditService.getLatestAuditData(filter));\n\n\t\tif (error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tif (!data) {\n\t\t\treturn { data: { items: [], total: 0 } };\n\t\t}\n\n\t\tconst { items, total } = data;\n\n\t\treturn { data: { items: items, total } };\n\t}\n}","import { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\nimport { ContentAuditStatusCodesCollectionDataSource } from \"./status-codes-collection.server.data-source\";\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\nimport { PageDto } from '../../../../api';\nimport { ContentAuditStatusCodesCollectionFilterModel } from '../types';\n\nexport class ContentAuditStatusCodesCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository<PageDto, ContentAuditStatusCodesCollectionFilterModel> {\n    #collectionSource: ContentAuditStatusCodesCollectionDataSource;\n\n    constructor(host: UmbControllerHost) {\n        super(host);\n        this.#collectionSource = new ContentAuditStatusCodesCollectionDataSource(host);\n    }\n\n    async requestCollection(filter: ContentAuditStatusCodesCollectionFilterModel) {\n        return this.#collectionSource.getCollection(filter);\n    }\n}\n\nexport default ContentAuditStatusCodesCollectionRepository;"],"names":["ContentAuditStatusCodesCollectionDataSource","host","__privateAdd","_host","__privateSet","filter","data","error","tryExecuteAndNotify","__privateGet","AuditService","items","total","ContentAuditStatusCodesCollectionRepository","UmbRepositoryBase","_collectionSource"],"mappings":";;;;;;;;;AAMO,MAAMA,EAAwF;AAAA,EAGjG,YAAYC,GAAyB;AAFrC,IAAAC,EAAA,MAAAC;AAGF,IAAAC,EAAA,MAAKD,GAAQF;AAAA,EAAA;AAAA,EAGd,MAAM,cAAcI,GAAsD;AACnE,UAAA,EAAE,MAAAC,GAAM,OAAAC,EAAU,IAAA,MAAMC,EAAoBC,EAAA,MAAKN,IAAOO,EAAa,mBAAmBL,CAAM,CAAC;AAErG,QAAIE;AACH,aAAO,EAAE,OAAAA,EAAM;AAGhB,QAAI,CAACD;AACG,aAAA,EAAE,MAAM,EAAE,OAAO,CAAA,GAAI,OAAO,IAAI;AAGlC,UAAA,EAAE,OAAAK,GAAO,OAAAC,EAAA,IAAUN;AAEzB,WAAO,EAAE,MAAM,EAAE,OAAAK,GAAc,OAAAC,IAAQ;AAAA,EAAA;AAEzC;AArBIT,IAAA;;ACAG,MAAMU,UAAoDC,EAA4G;AAAA,EAGzK,YAAYb,GAAyB;AACjC,UAAMA,CAAI;AAHd,IAAAC,EAAA,MAAAa;AAIS,IAAAX,EAAA,MAAAW,GAAoB,IAAIf,EAA4CC,CAAI;AAAA,EAAA;AAAA,EAGjF,MAAM,kBAAkBI,GAAsD;AACnE,WAAAI,EAAA,MAAKM,GAAkB,cAAcV,CAAM;AAAA,EAAA;AAE1D;AAVIU,IAAA;"}