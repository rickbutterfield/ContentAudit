{"version":3,"file":"overview.element-BWLKjr4_.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/workspace/views/overview.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\nimport { css, customElement, html, LitElement, nothing, state } from \"@umbraco-cms/backoffice/external/lit\";\nimport { IssueDto, OverviewDto, HealthScoreDto, CrawlDto } from \"../../api\";\nimport ContentAuditContext, { CONTENT_AUDIT_CONTEXT_TOKEN } from \"../../context/audit.context\";\n\n@customElement('content-audit-scan-view')\nexport class ContentAuditScanViewElement extends UmbElementMixin(LitElement) {\n    private crawlData: CrawlDto[] = [];\n\n    #context?: ContentAuditContext;\n\n    @state()\n    scanRunning?: boolean = false;\n\n    @state()\n    _latestAuditOverview?: OverviewDto;\n\n    @state()\n    _topIssues: Array<IssueDto> = [];\n\n    @state()\n    _healthScore?: HealthScoreDto;\n\n    @state()\n    _pagesWithoutErrors?: number;\n\n    constructor() {\n        super();\n\n        this.consumeContext(CONTENT_AUDIT_CONTEXT_TOKEN, (context) => {\n            this.#context = context;\n\n            this.observe(context.latestAuditOverview, (latestAuditOverview) => {\n                this._latestAuditOverview = latestAuditOverview;\n            });\n\n            this.observe(context.topIssues, (topIssues) => {\n                this._topIssues = topIssues;\n            });\n\n            this.observe(context.healthScore, (healthScore) => {\n                this._healthScore = healthScore;\n                if (this._healthScore != undefined) {\n                    this._pagesWithoutErrors = this._healthScore.totalPages - this._healthScore.pagesWithErrors;\n                }\n            });\n\n            this.#init();\n        });\n    }\n\n    #init() {\n        this.#context?.getLatestAuditOverview();\n        this.#context?.getTopIssues();\n        this.#context?.getHealthScore();\n    }\n\n    startAudit() {\n        const eventSource = new EventSource('/umbraco/content-audit/api/v1/start-crawl');\n\n        this.scanRunning = true;\n        this.crawlData = [];\n\n        eventSource.onmessage = (event) => {\n            const data: CrawlDto = JSON.parse(event.data);\n            this.crawlData.push(data);\n            this.requestUpdate();\n        };\n\n        eventSource.onerror = (error) => {\n            if (eventSource.readyState === EventSource.CLOSED) {\n                console.log('EventSource connection closed by the server.');\n            } else {\n                console.error('EventSource encountered an error:', error);\n            }\n            this.scanRunning = false;\n            this.#init();\n            eventSource.close();\n        };\n    }\n\n    #renderScanBox() {\n        if (!this.scanRunning) {\n            if (this._latestAuditOverview?.runDate == null) {\n                return html`<p>No scan has been run yet</p>`;\n            }\n            else {\n                return html`\n                    <p><strong>URLs found: </strong> ${this._latestAuditOverview?.totalUrls}</p>\n                    <p><strong>Pages crawled: </strong> ${this._latestAuditOverview?.totalPagesCrawled}</p>\n                    <p><strong>Assets crawled: </strong> ${this._latestAuditOverview?.totalAssetsCrawled}</p>\n                    <p><strong>Blocked URLs: </strong> ${this._latestAuditOverview?.totalPagesBlocked}</p>\n                `\n            }\n        }\n        else {\n            const total = this.crawlData.length;\n            const crawled = this.crawlData.filter(x => x.crawled && !x.asset).length;\n            const assets = this.crawlData.filter(x => x.crawled && x.asset).length;\n            const blocked = this.crawlData.filter(x => x.blocked).length;\n\n            return html`\n                <uui-loader-bar></uui-loader-bar>\n                <p><strong>URLs found: </strong> ${total}</p>\n                <p><strong>Pages crawled: </strong> ${crawled}</p>\n                <p><strong>Assets crawled: </strong> ${assets}</p>\n                <p><strong>Blocked URLs: </strong> ${blocked}</p>\n            `\n        }\n    }\n\n    #renderLatestAudit() {\n        if (this._latestAuditOverview !== undefined) {\n            return html`\n                <uui-box headline=\"Latest audit\">\n                    <div slot=\"header\">\n                        ${this._latestAuditOverview?.runDate != null ? this.localize.date(this._latestAuditOverview?.runDate!, { dateStyle: 'long', timeStyle: 'short' }) : nothing}\n                    </div>\n                    <div slot=\"header-actions\">\n                        <uui-button\n                            look=\"primary\"\n                            @click=${this.startAudit}\n                            .state=${this.scanRunning ? \"waiting\" : \"\"}\n                        >Run new scan</uui-button>\n                    </div>\n\n                    ${this.#renderScanBox()}\n                </uui-box>\n            `\n        }\n    }\n\n    #renderHealthScore() {\n        if (this._healthScore !== undefined) {\n            return html`\n                <uui-box headline=\"Site health\">\n                    <p class=\"uui-h2\">${this._healthScore?.healthScore.toFixed(0)} / 100</p>\n                </uui-box>\n            `;\n        }\n    }\n\n    #renderTopIssues() {\n        if (this._topIssues.length !== 0) {\n            return html`\n                <uui-box headline=\"Top issues\" class=\"grow\" style=\"--uui-box-default-padding: 0;\">\n                    <div slot=\"header-actions\">\n                        <uui-button look=\"secondary\" href=\"/umbraco/section/audit/workspace/issues-root\">See all issues</uui-button>\n                    </div>\n                    <content-audit-issues-table-collection-view data=\"ABC\" .data=${this._topIssues}></content-audit-issues-table-collection-view>\n                </uui-box>\n            `\n        }\n    }\n\n    override render() {\n        return html`\n            <div id=\"main\">\n                ${this.#renderLatestAudit()}\n                ${this.#renderHealthScore()}\n                ${this.#renderTopIssues()}\n            </div>\n        `\n    }\n\n    static override styles = [\n        css`\n            :host {\n                display: block;\n                padding: var(--uui-size-space-5);\n            }\n\n            #main {\n                display: grid;\n                gap: var(--uui-size-space-5); \n                grid-template-columns: repeat(2, 1fr);\n            }\n\n            .grow {\n                grid-column: span 2;\n            }\n\n            #chart {\n\t\t\t\twidth: 150px;\n\t\t\t\taspect-ratio: 1;\n\t\t\t\tbackground: radial-gradient(white 40%, transparent 41%),\n\t\t\t\t\tconic-gradient(\n\t\t\t\t\t\tvar(--umb-log-viewer-debug-color) 0% 20%,\n\t\t\t\t\t\tvar(--umb-log-viewer-information-color) 20% 40%,\n\t\t\t\t\t\tvar(--umb-log-viewer-warning-color) 40% 60%,\n\t\t\t\t\t\tvar(--umb-log-viewer-error-color) 60% 80%,\n\t\t\t\t\t\tvar(--umb-log-viewer-fatal-color) 80% 100%\n\t\t\t\t\t);\n\t\t\t\tmargin: 10px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder-radius: 50%;\n\t\t\t}\n        `\n    ]\n}\n\nexport default ContentAuditScanViewElement;\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'content-audit-scan-view': ContentAuditScanViewElement;\n    }\n}\n"],"names":["_context","_ContentAuditScanViewElement_instances","init_fn","renderScanBox_fn","renderLatestAudit_fn","renderHealthScore_fn","renderTopIssues_fn","ContentAuditScanViewElement","UmbElementMixin","LitElement","__privateAdd","CONTENT_AUDIT_CONTEXT_TOKEN","context","__privateSet","latestAuditOverview","topIssues","healthScore","__privateMethod","eventSource","event","data","error","html","_a","__privateGet","_b","_c","total","crawled","x","assets","blocked","_d","_e","nothing","css","__decorateClass","state","customElement","ContentAuditScanViewElement$1"],"mappings":"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"}