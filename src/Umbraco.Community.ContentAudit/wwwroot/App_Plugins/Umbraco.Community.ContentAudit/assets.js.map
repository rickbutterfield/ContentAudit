{"version":3,"file":"assets.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/helpers/index.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/issue-table.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/ApiError.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/CancelablePromise.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/OpenAPI.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/request.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/services.gen.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/sources/audit.source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/sources/crawl.source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/content-audit.repository.ts","../../../../Umbraco.Community.ContentAudit.UI/src/context/audit.context.ts","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/decorators/custom-element.js","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/css-tag.js","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/reactive-element.js","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/workspace.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/index.ts"],"sourcesContent":["import { IssueLabelConfig } from \"../interfaces\";\r\n\r\nexport const IssueTypeConfigMap: Array<IssueLabelConfig> = [\r\n    {\r\n        label: 'Opportunity',\r\n        icon: 'icon-info',\r\n        class: 'opportunity'\r\n    },\r\n    {\r\n        label: 'Warning',\r\n        icon: 'icon-stop-alt',\r\n        class: 'warning'\r\n    },\r\n    {\r\n        label: 'Issue',\r\n        icon: 'icon-alert',\r\n        class: 'issue'\r\n    }\r\n]\r\n\r\nexport const IssuePriorityConfigMap: Array<IssueLabelConfig> = [\r\n    {\r\n        label: 'Low',\r\n        icon: 'icon-navigation-bottom',\r\n        class: 'low'\r\n    },\r\n    {\r\n        label: 'Medium',\r\n        icon: 'icon-navigation-road',\r\n        class: 'medium'\r\n    },\r\n    {\r\n        label: 'High',\r\n        icon: 'icon-navigation-top',\r\n        class: 'high'\r\n    }\r\n];","import { css, customElement, html, LitElement, property, repeat } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { AuditIssueDto, IssuePriority, IssueType } from \"../api\";\r\nimport { IssuePriorityConfigMap, IssueTypeConfigMap } from \"../helpers\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\n\r\n@customElement('audit-issue-table')\r\nexport class IssuesTable extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ type: Array })\r\n    data: Array<AuditIssueDto> = [];\r\n\r\n    /**\r\n     * Renders the IssueType label.\r\n     * @param type - The type of the issue.\r\n     */\r\n    #renderIssueType(type: IssueType) {\r\n        const config = IssueTypeConfigMap[parseInt(type) - 1];\r\n        return html`\r\n            <div class=\"issue-label ${config.class}\">\r\n                <uui-icon name=\"${config.icon}\"></uui-icon>\r\n                <span class=\"label\">${config.label}</span>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Renders the IssuePriority label.\r\n     * @param priority - The priority of the issue.\r\n     */\r\n    #renderIssuePriority(priority: IssuePriority) {\r\n        const config = IssuePriorityConfigMap[parseInt(priority) - 1];\r\n        return html`\r\n            <div class=\"issue-label ${config.class}\">\r\n                <uui-icon name=\"${config.icon}\"></uui-icon>\r\n                <span class=\"label\">${config.label}</span>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    override render() {\r\n        if (this.data.length > 0) {\r\n            return html`\r\n            <uui-table>\r\n                <uui-table-column></uui-table-column>\r\n                <uui-table-column></uui-table-column>\r\n                <uui-table-column></uui-table-column>\r\n                <uui-table-column></uui-table-column>\r\n                <uui-table-column></uui-table-column>\r\n\r\n                <uui-table-head>\r\n                    <uui-table-head-cell>Name</uui-table-head-cell>\r\n                    <uui-table-head-cell>Type</uui-table-head-cell>\r\n                    <uui-table-head-cell>Priority</uui-table-head-cell>\r\n                    <uui-table-head-cell>URLs</uui-table-head-cell>\r\n                    <uui-table-head-cell>%</uui-table-head-cell>\r\n                </uui-table-head>\r\n                ${repeat(\r\n                this.data!,\r\n                (issue) => issue.name,\r\n                (issue) => html`\r\n                        <uui-table-row>\r\n                            <uui-table-cell>\r\n                                <strong>${issue.category}: ${issue.name}</strong><br/>\r\n                                ${issue.description}\r\n                            </uui-table-cell>\r\n                            <uui-table-cell>${this.#renderIssueType(issue.type)}</uui-table-cell>\r\n                            <uui-table-cell>${this.#renderIssuePriority(issue.priority)}</uui-table-cell>\r\n                            <uui-table-cell>${issue.numberOfUrls}</uui-table-cell>\r\n                            <uui-table-cell>${issue.percentOfTotal?.toFixed(2)}%</uui-table-cell>\r\n                        </uui-table-row>\r\n                    `\r\n            )}\r\n            </uui-table>\r\n            `\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            .issue-label {\r\n                display: flex;\r\n                align-items: center;\r\n\r\n                uui-icon {\r\n                    margin-right: 6px;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default IssuesTable;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"audit-issue-table\"]: IssuesTable;\r\n    }\r\n}\r\n","export const CONTENT_AUDIT_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit';\r\nexport const CONTENT_AUDIT_CONTEXT_ALIAS = 'Umb.Context.ContentAudit';\r\nexport const CONTENT_AUDIT_ENTITY_TYPE = 'content-audit';\r\n","import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tappend(key, value.toISOString());\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions<T>, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\t// @ts-ignore\n\t\tresolve(options, config.TOKEN),\n\t\t// @ts-ignore\n\t\tresolve(options, config.USERNAME),\n\t\t// @ts-ignore\n\t\tresolve(options, config.PASSWORD),\n\t\t// @ts-ignore\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tlet transformedBody = responseBody;\n\t\t\t\tif (options.responseTransformer && response.ok) {\n\t\t\t\t\ttransformedBody = await options.responseTransformer(responseBody)\n\t\t\t\t}\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? transformedBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { GetAllIssuesResponse, GetDuplicateContentUrlsResponse, GetHealthScoreResponse, GetLatestAuditOverviewResponse, GetPagesWithMissingMetadataResponse, StartCrawlResponse } from './types.gen';\n\nexport class AuditService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getAllIssues(): CancelablePromise<GetAllIssuesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/all-issues'\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDuplicateContentUrls(): CancelablePromise<GetDuplicateContentUrlsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/duplicate-content'\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHealthScore(): CancelablePromise<GetHealthScoreResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/health-score'\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLatestAuditOverview(): CancelablePromise<GetLatestAuditOverviewResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/latest-audit'\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPagesWithMissingMetadata(): CancelablePromise<GetPagesWithMissingMetadataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/missing-metadata'\n        });\n    }\n    \n}\n\nexport class CrawlService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static startCrawl(): CancelablePromise<StartCrawlResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/start-crawl'\n        });\n    }\n    \n}","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { AuditService, GetAllIssuesResponse, GetHealthScoreResponse, GetLatestAuditOverviewResponse, GetPagesWithMissingMetadataResponse } from \"../../api\";\r\n\r\nexport interface AuditDataSource {\r\n    getLatestAuditOverview(): Promise<UmbDataSourceResponse<GetLatestAuditOverviewResponse>>\r\n    getPagesWithMissingMetadata(): Promise<UmbDataSourceResponse<GetPagesWithMissingMetadataResponse>>\r\n    getAllIssues(): Promise<UmbDataSourceResponse<GetAllIssuesResponse>>\r\n    getHealthScore(): Promise<UmbDataSourceResponse<GetHealthScoreResponse>>\r\n}\r\n\r\nexport class ContentAuditDataSource implements AuditDataSource {\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async getLatestAuditOverview(): Promise<UmbDataSourceResponse<GetLatestAuditOverviewResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getLatestAuditOverview());\r\n    }\r\n\r\n    async getPagesWithMissingMetadata(): Promise<UmbDataSourceResponse<GetPagesWithMissingMetadataResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getPagesWithMissingMetadata());\r\n    }\r\n\r\n    async getAllIssues(): Promise<UmbDataSourceResponse<GetAllIssuesResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getAllIssues());\r\n    }\r\n\r\n    async getHealthScore(): Promise<UmbDataSourceResponse<GetHealthScoreResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getHealthScore());\r\n    }\r\n}","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\n\r\nexport interface CrawlDataSource {\r\n}\r\n\r\nexport class ContentCrawlDataSource implements CrawlDataSource {\r\n    _host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this._host = host;\r\n    }\r\n\r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { ContentAuditDataSource } from \"./sources/audit.source\";\r\nimport { ContentCrawlDataSource } from \"./sources/crawl.source\";\r\n\r\nexport class ContentAuditRepository extends UmbControllerBase {\r\n    #auditDataSource: ContentAuditDataSource;\r\n    _crawlDataSource: ContentCrawlDataSource;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n\r\n        this.#auditDataSource = new ContentAuditDataSource(this);\r\n        this._crawlDataSource = new ContentCrawlDataSource(this);\r\n    }\r\n\r\n    async getLatestAuditOverview() {\r\n        return this.#auditDataSource.getLatestAuditOverview();\r\n    }\r\n\r\n    async getPagesWithMissingMetadata() {\r\n        return this.#auditDataSource.getPagesWithMissingMetadata();\r\n    }\r\n\r\n    async getAllIssues() {\r\n        return this.#auditDataSource.getAllIssues();\r\n    }\r\n\r\n    async getHealthScore() {\r\n        return this.#auditDataSource.getHealthScore();\r\n    }\r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UMB_WORKSPACE_CONTEXT, UmbWorkspaceContext } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { CONTENT_AUDIT_ENTITY_TYPE, CONTENT_AUDIT_WORKSPACE_ALIAS } from \"../workspace/constants\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { ContentAuditRepository } from \"../repository/content-audit.repository\";\r\nimport { UmbArrayState, UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\r\nimport { AuditIssueDto, AuditOverviewDto, HealthScoreDto, PageResponseDto } from \"../api\";\r\n\r\nexport class ContentAuditContext extends UmbControllerBase implements UmbWorkspaceContext {\r\n\tpublic readonly workspaceAlias: string = CONTENT_AUDIT_WORKSPACE_ALIAS;\r\n\r\n\tgetEntityType(): string {\r\n\t\treturn CONTENT_AUDIT_ENTITY_TYPE;\r\n\t}\r\n\r\n\t#repository: ContentAuditRepository;\r\n\r\n\t#latestAuditOverview = new UmbObjectState<AuditOverviewDto | undefined>(undefined);\r\n\tpublic readonly latestAuditOverview = this.#latestAuditOverview.asObservable();\r\n\r\n\t#pagesWithMissingMetadata = new UmbArrayState<PageResponseDto>([], (x) => x.id);\r\n\tpublic readonly pagesWithMissingMetadata = this.#pagesWithMissingMetadata.asObservable();\r\n\r\n\t#allIssues = new UmbArrayState<AuditIssueDto>([], (x) => x.name);\r\n\tpublic readonly allIssues = this.#allIssues.asObservable();\r\n\r\n\t#healthScore = new UmbObjectState<HealthScoreDto | undefined>(undefined);\r\n\tpublic readonly healthScore = this.#healthScore.asObservable();\r\n\t\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n\t\tthis.provideContext(CONTENT_AUDIT_CONTEXT_TOKEN, this);\r\n\r\n\t\tthis.#repository = new ContentAuditRepository(this);\r\n\t}\r\n\r\n\tasync getLatestAuditOverview() {\r\n\t\tconst { data } = await this.#repository.getLatestAuditOverview();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#latestAuditOverview.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPagesWithMissingMetadata() {\r\n\t\tconst { data } = await this.#repository.getPagesWithMissingMetadata();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#pagesWithMissingMetadata.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getAllIssues() {\r\n\t\tconst { data } = await this.#repository.getAllIssues();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#allIssues.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getHealthScore() {\r\n\t\tconst { data } = await this.#repository.getHealthScore();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#healthScore.setValue(data);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ContentAuditContext;\r\n\r\nexport const CONTENT_AUDIT_CONTEXT_TOKEN = new UmbContextToken<ContentAuditContext>(\r\n\t'ContentAuditContext',\r\n);\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:r,getOwnPropertyNames:h,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),y={attribute:!0,type:String,converter:u,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class b extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=y){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),r=this.getPropertyDescriptor(t,i,s);void 0!==r&&e(this.prototype,t,r)}}static getPropertyDescriptor(t,s,i){const{get:e,set:h}=r(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get(){return e?.call(this)},set(s){const r=e?.call(this);h.call(this,s),this.requestUpdate(t,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??y}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...h(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$EC(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const r=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==r?this.removeAttribute(e):this.setAttribute(e,r),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),r=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=r.fromAttribute(s,t.type),this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){if(i??=this.constructor.getPropertyOptions(t),!(i.hasChanged??f)(this[t],s))return;this.P(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(t,s,i){this._$AL.has(t)||this._$AL.set(t,s),!0===i.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t)!0!==i.wrapped||this._$AL.has(s)||void 0===this[s]||this.P(s,this[s],i)}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EU()}catch(s){throw t=!1,this._$EU(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EC(t,this[t]))),this._$EU()}updated(t){}firstUpdated(t){}}b.elementStyles=[],b.shadowRootOptions={mode:\"open\"},b[d(\"elementProperties\")]=new Map,b[d(\"finalized\")]=new Map,p?.({ReactiveElement:b}),(a.reactiveElementVersions??=[]).push(\"2.0.4\");export{b as ReactiveElement,u as defaultConverter,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { html, LitElement } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { customElement } from \"lit/decorators.js\";\r\nimport ContentAuditContext from \"../context/audit.context\";\r\n\r\n@customElement('content-audit-workspace-root')\r\nexport class ContentAuditWorkspaceRootElement extends UmbElementMixin(LitElement) {\r\n\r\n\t_workspaceContext: ContentAuditContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._workspaceContext = new ContentAuditContext(this);\r\n    }\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-editor headline=\"Audit\" .enforceNoFooter=${true}>\r\n\t\t\t</umb-workspace-editor>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default ContentAuditWorkspaceRootElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-workspace-root': ContentAuditWorkspaceRootElement;\r\n    }\r\n}","export const AUDIT_ISSUES_ENTITY_TYPE = 'issues';\r\nexport const AUDIT_ISSUES_ROOT_ENTITY_TYPE = 'issues-root';\r\n\r\nexport type AuditIssuesEntityType = typeof AUDIT_ISSUES_ENTITY_TYPE;\r\nexport type AuditIssuesRootEntityType = typeof AUDIT_ISSUES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_ISSUES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.Issues',\r\n    name: 'Issues Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Issues',\r\n        icon: 'icon-alert',\r\n        entityType: AUDIT_ISSUES_ROOT_ENTITY_TYPE,\r\n        menus: [\"Umb.Menu.ContentAudit\"],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { AUDIT_ISSUES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.Issues';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        alias: workspaceAlias,\r\n        name: 'Issues Root Workspace',\r\n        js: () => import('./views/issues-workspace-view.element'),\r\n        meta: {\r\n            entityType: AUDIT_ISSUES_ROOT_ENTITY_TYPE\r\n        }\r\n    }\r\n]","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_STATUS_CODES_ENTITY_TYPE = 'status-codes';\r\nexport const AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE = 'status-codes-root';\r\n\r\nexport type AuditStatusCodesEntityType = typeof AUDIT_STATUS_CODES_ENTITY_TYPE;\r\nexport type AuditStatusCodesRootEntityType = typeof AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.StatusCodes',\r\n    name: 'Status Codes Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Status Codes',\r\n        icon: 'icon-stop-alt',\r\n        entityType: AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE,\r\n        menus: [\"Umb.Menu.ContentAudit\"]\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.StatusCodes';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        alias: workspaceAlias,\r\n        name: 'Status Codes Root Workspace',\r\n        js: () => import('./views/status-codes-workspace-view.element'),\r\n        meta: {\r\n            entityType: AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE\r\n        }\r\n    }\r\n]","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_ORPHANED_PAGES_ENTITY_TYPE = 'orphaned-pages';\r\nexport const AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE = 'orphaned-pages-root';\r\n\r\nexport type AuditOrphanedPagesEntityType = typeof AUDIT_ORPHANED_PAGES_ENTITY_TYPE;\r\nexport type AuditOrphanedPagesRootEntityType = typeof AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE;","export const CONTENT_AUDIT_MENU_0_ALIAS = 'Umb.Menu.ContentAudit';\r\nexport const CONTENT_AUDIT_MENU_1_ALIAS = 'Umb.Menu.ContentMetadata';","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_1_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.OrphanedPages',\r\n    name: 'Orphaned Pages Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Orphaned Pages',\r\n        icon: 'icon-tactics',\r\n        entityType: AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_1_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.OrphanedPages';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        alias: workspaceAlias,\r\n        name: 'Orphaned Pages Root Workspace',\r\n        js: () => import('./views/orphaned-pages-workspace-view.element'),\r\n        meta: {\r\n            entityType: AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE\r\n        }\r\n    }\r\n]","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_METADATA_ENTITY_TYPE = 'metadata';\r\nexport const AUDIT_METADATA_ROOT_ENTITY_TYPE = 'metadata-root';\r\n\r\nexport type AuditMetadataEntityType = typeof AUDIT_METADATA_ENTITY_TYPE;\r\nexport type AuditMetadataRootEntityType = typeof AUDIT_METADATA_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_METADATA_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.Metadata',\r\n    name: 'Metadata Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Metadata',\r\n        icon: 'icon-tags',\r\n        entityType: AUDIT_METADATA_ROOT_ENTITY_TYPE,\r\n        menus: [\"Umb.Menu.ContentMetadata\"],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { AUDIT_METADATA_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.Metadata';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        alias: workspaceAlias,\r\n        name: 'Metadata Root Workspace',\r\n        js: () => import('./views/metadata-workspace-view.element'),\r\n        meta: {\r\n            entityType: AUDIT_METADATA_ROOT_ENTITY_TYPE\r\n        }\r\n    }\r\n]","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_DUPLICATE_CONTENT_ENTITY_TYPE = 'duplicate-content';\r\nexport const AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE = 'duplicate-content-root';\r\n\r\nexport type AuditDuplicateContentEntityType = typeof AUDIT_DUPLICATE_CONTENT_ENTITY_TYPE;\r\nexport type AuditDuplicateContentRootEntityType = typeof AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.DuplicateContent',\r\n    name: 'Duplicate Content Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Duplicate Content',\r\n        icon: 'icon-documents',\r\n        entityType: AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE,\r\n        menus: [\"Umb.Menu.ContentMetadata\"],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.DuplicateContent';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        alias: workspaceAlias,\r\n        name: 'Duplicate Content Root Workspace',\r\n        js: () => import('./views/duplicate-content-workspace-view.element'),\r\n        meta: {\r\n            entityType: AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE\r\n        }\r\n    }\r\n]","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_INBOUND_LINKS_ENTITY_TYPE = 'inbound-links';\r\nexport const AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE = 'inbound-links-root';\r\n\r\nexport type AuditInboundLinksEntityType = typeof AUDIT_INBOUND_LINKS_ENTITY_TYPE;\r\nexport type AuditInboundLinksRootEntityType = typeof AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.InboundLinks',\r\n    name: 'Inbound Links Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Inbound Links',\r\n        icon: 'icon-window-popin',\r\n        entityType: AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { manifests as menuItems } from './menu/manifests';\r\n//import { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    //...workspaceManifests,\r\n    ...menuItems\r\n]","export const AUDIT_OUTBOUND_LINKS_ENTITY_TYPE = 'outbound-links';\r\nexport const AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE = 'outbound-links-root';\r\n\r\nexport type AuditOutboundLinksEntityType = typeof AUDIT_OUTBOUND_LINKS_ENTITY_TYPE;\r\nexport type AuditOutboundLinksRootEntityType = typeof AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.OutboundLinks',\r\n    name: 'Outbound Links Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Outbound Links',\r\n        icon: 'icon-window-popout',\r\n        entityType: AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","import { manifests as menuItems } from './menu/manifests';\r\n//import { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    //...workspaceManifests,\r\n    ...menuItems\r\n]","import { ManifestMenu } from '@umbraco-cms/backoffice/menu';\r\nimport { ManifestSection, ManifestSectionSidebarApp, ManifestSectionView } from '@umbraco-cms/backoffice/section';\r\n\r\nimport { manifests as issuesManifests } from './issues/manifests';\r\nimport { manifests as statusCodesManifests } from './status-codes/manifests';\r\nimport { manifests as orphanedPagesManifests } from './orphaned-pages/manifests';\r\nimport { manifests as metadataManifests } from './metadata/manifests';\r\nimport { manifests as duplicateContentManifests } from './duplicate-content/manifests';\r\nimport { manifests as inboundLinksManifests } from './inbound-links/manifests';\r\nimport { manifests as outboundLinksManifests } from './outbound-links/manifests';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS, CONTENT_AUDIT_MENU_1_ALIAS } from './constants';\r\n\r\nconst sectionAlias = 'Umb.Section.ContentAudit';\r\n\r\nconst section: ManifestSection = {\r\n    type: 'section',\r\n    alias: sectionAlias,\r\n    name: 'Content Audit',\r\n    meta: {\r\n        label: 'Audit',\r\n        pathname: 'audit'\r\n    }\r\n}\r\n\r\nconst sectionView: ManifestSectionView =\r\n{\r\n    type: 'sectionView',\r\n    alias: 'Umb.SectionView.ContentAudit.Scan',\r\n    name: 'Content Audit Scan Section View',\r\n    element: () => import('./section.element'),\r\n    meta: {\r\n        label: 'Scan',\r\n        icon: 'icon-scan',\r\n        pathname: 'audit-root'\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.SectionAlias',\r\n            match: sectionAlias,\r\n        },\r\n    ]\r\n}\r\n\r\nconst menus: ManifestMenu[] = [\r\n    {\r\n        type: 'menu',\r\n        alias: CONTENT_AUDIT_MENU_0_ALIAS,\r\n        name: 'Audit Menu'\r\n    },\r\n    {\r\n        type: 'menu',\r\n        alias: CONTENT_AUDIT_MENU_1_ALIAS,\r\n        name: 'Content Menu'\r\n    },\r\n]\r\n\r\nconst menuSectionSidebarApps: ManifestSectionSidebarApp[] = [\r\n    {\r\n        type: 'sectionSidebarApp',\r\n        kind: 'menu',\r\n        alias: 'Umb.SidebarMenu.ContentAudit',\r\n        name: 'Content Audit Sidebar Menu',\r\n        meta: {\r\n            label: 'Site Audit',\r\n            menu: CONTENT_AUDIT_MENU_0_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: sectionAlias\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'sectionSidebarApp',\r\n        kind: 'menu',\r\n        alias: 'Umb.SidebarMenu.ContentMetadata',\r\n        name: 'Content Sidebar Menu',\r\n        meta: {\r\n            label: 'Content',\r\n            menu: CONTENT_AUDIT_MENU_1_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: sectionAlias\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const manifests = [\r\n    section,\r\n    sectionView,\r\n    ...menus,\r\n    ...menuSectionSidebarApps,\r\n    ...issuesManifests,\r\n    ...statusCodesManifests,\r\n    ...orphanedPagesManifests,\r\n    ...metadataManifests,\r\n    ...duplicateContentManifests,\r\n    ...inboundLinksManifests,\r\n    ...outboundLinksManifests\r\n]","import { ManifestWorkspace, ManifestWorkspaceView } from '@umbraco-cms/backoffice/workspace';\r\nimport { CONTENT_AUDIT_ENTITY_TYPE, CONTENT_AUDIT_WORKSPACE_ALIAS } from './constants';\r\n\r\nconst workspace: ManifestWorkspace = {\r\n    type: 'workspace',\r\n    alias: CONTENT_AUDIT_WORKSPACE_ALIAS,\r\n    name: 'Content Audit Workspace',\r\n    element: () => import('./workspace.element'),\r\n    meta: {\r\n        entityType: CONTENT_AUDIT_ENTITY_TYPE\r\n    }\r\n};\r\n\r\nconst workspaceViews: ManifestWorkspaceView[] = [\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'Umb.WorkspaceView.ContentAudit.Scan',\r\n        name: 'Content Audit Scan Workspace View',\r\n        element: () => import('./views/overview.element'),\r\n        meta: {\r\n            label: 'Overview',\r\n            pathname: 'overview',\r\n            icon: 'icon-scan'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.WorkspaceAlias',\r\n                match: CONTENT_AUDIT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'Umb.WorkspaceView.ContentAudit.Settings',\r\n        name: 'Content Audit Settings Workspace View',\r\n        element: () => import('./views/settings.element'),\r\n        meta: {\r\n            label: 'Settings',\r\n            pathname: 'settings',\r\n            icon: 'icon-settings-alt'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.WorkspaceAlias',\r\n                match: CONTENT_AUDIT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const manifests = [\r\n    workspace,\r\n    ...workspaceViews\r\n]","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\n\r\nexport * from './exports.ts';\r\n\r\nimport { manifests as sectionManifests } from './section/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { OpenAPI } from './api/index.ts';\r\nimport { ManifestGlobalContext } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { CONTENT_AUDIT_CONTEXT_ALIAS } from './exports.ts';\r\n\r\nconst globalContext: ManifestGlobalContext = {\r\n    type: 'globalContext',\r\n    alias: CONTENT_AUDIT_CONTEXT_ALIAS,\r\n    name: 'Content Audit Workspace Context',\r\n    js: () => import('./context/audit.context')\r\n}\r\n\r\nexport const onInit: UmbEntryPointOnInit = async (host, extensionRegistry) => {\r\n\r\n    extensionRegistry.registerMany([\r\n        globalContext,\r\n        ...sectionManifests,\r\n        ...workspaceManifests\r\n    ]);\r\n\r\n    host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n        if (!auth) return;\r\n\r\n        const umbOpenApi = auth.getOpenApiConfiguration();\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n        OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n    });\r\n}"],"names":["IssueTypeConfigMap","IssuePriorityConfigMap","_IssuesTable_instances","renderIssueType_fn","renderIssuePriority_fn","IssuesTable","UmbElementMixin","LitElement","__privateAdd","html","repeat","issue","__privateMethod","_a","type","config","priority","css","__decorateClass","property","customElement","CONTENT_AUDIT_WORKSPACE_ALIAS","CONTENT_AUDIT_CONTEXT_ALIAS","CONTENT_AUDIT_ENTITY_TYPE","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","options","encoder","path","substring","group","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","transformedBody","AuditService","__request","ContentAuditDataSource","host","_host","__privateSet","tryExecuteAndNotify","__privateGet","ContentCrawlDataSource","ContentAuditRepository","UmbControllerBase","_auditDataSource","ContentAuditContext","_repository","_latestAuditOverview","_pagesWithMissingMetadata","_allIssues","_healthScore","UmbObjectState","UmbArrayState","x","UMB_WORKSPACE_CONTEXT","CONTENT_AUDIT_CONTEXT_TOKEN","data","UmbContextToken","t","e","o","s","n$1","r","n","S","c","i","h","a","l","p","d","u","f","y","b","ContentAuditWorkspaceRootElement","ContentAuditWorkspaceRootElement$1","AUDIT_ISSUES_ROOT_ENTITY_TYPE","menuItem","manifests","workspaceAlias","workspaceManifests","menuItems","AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE","AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE","CONTENT_AUDIT_MENU_0_ALIAS","CONTENT_AUDIT_MENU_1_ALIAS","AUDIT_METADATA_ROOT_ENTITY_TYPE","AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE","AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE","AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE","sectionAlias","section","sectionView","menus","menuSectionSidebarApps","issuesManifests","statusCodesManifests","orphanedPagesManifests","metadataManifests","duplicateContentManifests","inboundLinksManifests","outboundLinksManifests","workspace","workspace_element","workspaceViews","globalContext","audit_context","onInit","extensionRegistry","sectionManifests","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":"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","x_google_ignoreList":[12,13,14]}