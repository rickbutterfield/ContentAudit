{"version":3,"file":"overview.element-C_pb7hPd.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/workspace/views/overview.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, nothing, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { AuditIssueDto, AuditOverviewDto, HealthScoreDto, PageResponseDto } from \"../../api\";\r\nimport ContentAuditContext, { CONTENT_AUDIT_CONTEXT_TOKEN } from \"../../context/audit.context\";\r\n\r\n@customElement('content-audit-scan-view')\r\nexport class ContentAuditScanViewElement extends UmbElementMixin(LitElement) {\r\n    private auditData: PageResponseDto[] = [];\r\n\r\n    #context?: ContentAuditContext;\r\n\r\n    @state()\r\n    scanRunning?: boolean = false;\r\n\r\n    @state()\r\n    _latestAuditOverview?: AuditOverviewDto;\r\n\r\n    @state()\r\n    _topIssues: Array<AuditIssueDto> = [];\r\n\r\n    @state()\r\n    _healthScore?: HealthScoreDto;\r\n\r\n    @state()\r\n    _pagesWithoutErrors?: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(CONTENT_AUDIT_CONTEXT_TOKEN, (context) => {\r\n            this.#context = context;\r\n\r\n            this.observe(context.latestAuditOverview, (latestAuditOverview) => {\r\n                this._latestAuditOverview = latestAuditOverview;\r\n            });\r\n\r\n            this.observe(context.topIssues, (topIssues) => {\r\n                this._topIssues = topIssues;\r\n            });\r\n\r\n            this.observe(context.healthScore, (healthScore) => {\r\n                this._healthScore = healthScore;\r\n                if (this._healthScore != undefined) {\r\n                    this._pagesWithoutErrors = this._healthScore.totalPages - this._healthScore.pagesWithErrors;\r\n                }\r\n            });\r\n\r\n            this.#context?.getLatestAuditOverview();\r\n            this.#context?.getTopIssues();\r\n            this.#context?.getHealthScore();\r\n        });\r\n    }\r\n\r\n    startAudit() {\r\n        const eventSource = new EventSource('/umbraco/content-audit/api/v1/start-crawl');\r\n        this.scanRunning = true;\r\n\r\n        eventSource.onmessage = (event) => {\r\n            const data: PageResponseDto = JSON.parse(event.data);\r\n            this.auditData.push(data);\r\n            this.requestUpdate();\r\n        };\r\n\r\n        eventSource.onerror = (error) => {\r\n            if (eventSource.readyState === EventSource.CLOSED) {\r\n                console.log('EventSource connection closed by the server.');\r\n            } else {\r\n                console.error('EventSource encountered an error:', error);\r\n            }\r\n            this.scanRunning = false;\r\n            eventSource.close();\r\n        };\r\n    }\r\n\r\n    #renderLatestAudit() {\r\n        if (this._latestAuditOverview !== undefined) {\r\n            return html`\r\n                <uui-box headline=\"Latest audit\">\r\n                    <div slot=\"header\">\r\n                        ${this._latestAuditOverview?.runDate != null ? this.localize.date(this._latestAuditOverview?.runDate!, { dateStyle: 'long', timeStyle: 'short' }) : nothing}\r\n                    </div>\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button\r\n                            look=\"primary\"\r\n                            @click=${this.startAudit}\r\n                            .state=${this.scanRunning ? \"waiting\" : \"\"}\r\n                        >Run new scan</uui-button>\r\n                    </div>\r\n\r\n                    ${this._latestAuditOverview?.runDate == null ?\r\n                    html`\r\n                        <p>No scan has been run yet</p>`\r\n                    : html`\r\n                        <p><strong>URLs found: </strong> ${this._latestAuditOverview?.totalPages}</p>\r\n                        <p><strong>Pages crawled: </strong> ${this._latestAuditOverview?.totalPagesCrawled}</p>\r\n                        <p><strong>Blocked URLs: </strong> ${this._latestAuditOverview?.totalPagesBlocked}</p>\r\n                    `}\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderHealthScore() {\r\n        if (this._healthScore !== undefined) {\r\n            return html`\r\n                <uui-box headline=\"Site health\">\r\n                    <p class=\"uui-h2\">${this._healthScore?.healthScore} / 100</p>\r\n                </uui-box>\r\n            `;\r\n        }\r\n    }\r\n\r\n    #renderTopIssues() {\r\n        if (this._topIssues.length !== 0) {\r\n            return html`\r\n                <uui-box headline=\"Top issues\" class=\"grow\" style=\"--uui-box-default-padding: 0;\">\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button look=\"secondary\" href=\"/umbraco/section/audit/workspace/issues-root\">See all issues</uui-button>\r\n                    </div>\r\n                    <content-audit-issues-table-collection-view data=\"ABC\" .data=${this._topIssues}></content-audit-issues-table-collection-view>\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <div id=\"main\">\r\n                ${this.#renderLatestAudit()}\r\n                ${this.#renderHealthScore()}\r\n                ${this.#renderTopIssues()}\r\n            </div>\r\n        `\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: var(--uui-size-space-5);\r\n            }\r\n\r\n            #main {\r\n                display: grid;\r\n                gap: var(--uui-size-space-5); \r\n                grid-template-columns: repeat(2, 1fr);\r\n            }\r\n\r\n            .grow {\r\n                grid-column: span 2;\r\n            }\r\n\r\n            #chart {\r\n\t\t\t\twidth: 150px;\r\n\t\t\t\taspect-ratio: 1;\r\n\t\t\t\tbackground: radial-gradient(white 40%, transparent 41%),\r\n\t\t\t\t\tconic-gradient(\r\n\t\t\t\t\t\tvar(--umb-log-viewer-debug-color) 0% 20%,\r\n\t\t\t\t\t\tvar(--umb-log-viewer-information-color) 20% 40%,\r\n\t\t\t\t\t\tvar(--umb-log-viewer-warning-color) 40% 60%,\r\n\t\t\t\t\t\tvar(--umb-log-viewer-error-color) 60% 80%,\r\n\t\t\t\t\t\tvar(--umb-log-viewer-fatal-color) 80% 100%\r\n\t\t\t\t\t);\r\n\t\t\t\tmargin: 10px;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tborder-radius: 50%;\r\n\t\t\t}\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditScanViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-scan-view': ContentAuditScanViewElement;\r\n    }\r\n}\r\n"],"names":["_context","_ContentAuditScanViewElement_instances","renderLatestAudit_fn","renderHealthScore_fn","renderTopIssues_fn","ContentAuditScanViewElement","UmbElementMixin","LitElement","__privateAdd","CONTENT_AUDIT_CONTEXT_TOKEN","context","__privateSet","latestAuditOverview","topIssues","healthScore","_a","__privateGet","_b","_c","eventSource","event","data","error","html","__privateMethod","nothing","_d","_e","_f","css","__decorateClass","state","customElement","ContentAuditScanViewElement$1"],"mappings":"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"}