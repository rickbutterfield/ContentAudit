{"version":3,"file":"index-CLRTDzXS.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/helpers/index.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/issue-type-label.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/priority-type-label.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/status-code-label.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/carbon-intensity-rating.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/ApiError.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/CancelablePromise.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/OpenAPI.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/core/request.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/sdk.gen.ts","../../../../Umbraco.Community.ContentAudit.UI/src/api/types.gen.ts","../../../../Umbraco.Community.ContentAudit.UI/src/elements/metric-label.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/interfaces/index.ts","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/sources/audit.source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/sources/settings.source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/repository/content-audit.repository.ts","../../../../Umbraco.Community.ContentAudit.UI/src/context/audit.context.ts","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/decorators/custom-element.js","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/css-tag.js","../../../../Umbraco.Community.ContentAudit.UI/node_modules/@lit/reactive-element/reactive-element.js","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/workspace.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/repository/issue-collection.server.data-source.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/repository/issue-collection.repository.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/views/table/column-layouts/issues-table-name-column-layout.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/views/table/issues-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/workspace/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/workspace/all-pages/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/views/table/all-pages-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/workspace/all-pages-root/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/repository/detail/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/repository/detail/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/repository/manifest.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/all-pages/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/workspace/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/workspace/issues/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/workspace/issues-root/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/repository/detail/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/repository/detail/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/issues/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/views/table/status-codes-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/status-codes/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/views/table/orphaned-pages-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/orphaned-pages/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/views/table/images-alt-text-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/images-alt-text/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/views/table/outbound-links-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/outbound-links/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/views/table/inbound-links-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/inbound-links/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/views/table/duplicate-content-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/duplicate-content/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/views/table/carbon-rating-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/carbon-rating/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/entity.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/menu/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/repository/constants.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/views/table/core-web-vitals-table-collection-view.element.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/repository/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/views/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/collection/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/core-web-vitals/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/section/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/modals/manifest.ts","../../../../Umbraco.Community.ContentAudit.UI/src/localization/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/documents/manifests.ts","../../../../Umbraco.Community.ContentAudit.UI/src/index.ts"],"sourcesContent":["import { IssueLabelConfig } from \"../interfaces\";\r\n\r\nexport const IssueTypeConfigMap: Array<IssueLabelConfig> = [\r\n    {\r\n        label: 'Opportunity',\r\n        icon: 'icon-info',\r\n        class: 'opportunity',\r\n        color: 'default'\r\n    },\r\n    {\r\n        label: 'Warning',\r\n        icon: 'icon-stop-alt',\r\n        class: 'warning',\r\n        color: 'warning'\r\n    },\r\n    {\r\n        label: 'Issue',\r\n        icon: 'icon-alert',\r\n        class: 'issue',\r\n        color: 'danger'\r\n    }\r\n]\r\n\r\nexport const IssuePriorityConfigMap: Array<IssueLabelConfig> = [\r\n    {\r\n        label: 'Low',\r\n        icon: 'icon-navigation-bottom',\r\n        class: 'low',\r\n        color: 'default'\r\n    },\r\n    {\r\n        label: 'Medium',\r\n        icon: 'icon-navigation-road',\r\n        class: 'medium',\r\n        color: 'warning'\r\n    },\r\n    {\r\n        label: 'High',\r\n        icon: 'icon-navigation-top',\r\n        class: 'high',\r\n        color: 'danger'\r\n    }\r\n];","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { IssueTypeConfigMap } from \"../helpers\";\r\nimport { css, customElement, html, LitElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n@customElement('content-audit-issue-type-label')\r\nexport class ContentAuditIssueTypeLabel extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ attribute: false })\r\n    type: number = 0;\r\n\r\n    override render() {\r\n        if (this.type != 0) {\r\n            const config = IssueTypeConfigMap[this.type - 1];\r\n            return html`\r\n                <uui-tag color=${config.color}>\r\n                    <uui-icon name=\"${config.icon}\"></uui-icon>\r\n                    ${config.label}\r\n                </uui-tag>\r\n            `;\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            uui-tag {\r\n                font-size: 14px;\r\n\r\n                uui-icon {\r\n                    margin-right: 4px;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditIssueTypeLabel;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"content-audit-issue-type-label\"]: ContentAuditIssueTypeLabel;\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { IssuePriorityConfigMap } from \"../helpers\";\r\n\r\n@customElement('content-audit-priority-type-label')\r\nexport class ContentAuditPriorityTypeLabel extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ attribute: false })\r\n    type: number = 0;\r\n\r\n    override render() {\r\n        if (this.type != 0) {\r\n            const config = IssuePriorityConfigMap[this.type - 1];\r\n            return html`\r\n                <uui-tag color=${config.color}>\r\n                    <uui-icon name=\"${config.icon}\"></uui-icon>\r\n                    ${config.label}\r\n                </uui-tag>\r\n            `;\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            uui-tag {\r\n                font-size: 14px;\r\n\r\n                uui-icon {\r\n                    margin-right: 4px;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditPriorityTypeLabel;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"content-audit-priority-type-label\"]: ContentAuditPriorityTypeLabel;\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { customElement, html, LitElement, nothing, property } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n@customElement('content-audit-status-code-label')\r\nexport class ContentAuditStatusCodeLabel extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ attribute: false })\r\n    statusCode?: number;\r\n\r\n    _getColor(statusCode: number): string {\r\n        if (statusCode >= 200 && statusCode < 300) {\r\n            return \"positive\";\r\n        }\r\n\r\n        if (statusCode >= 300 && statusCode < 400) {\r\n            return \"warning\";\r\n        }\r\n\r\n        if (statusCode >= 400 && statusCode < 600) {\r\n            return \"danger\";\r\n        }\r\n\r\n        return \"default\";\r\n    }\r\n\r\n    override render() {\r\n        if (this.statusCode !== undefined) {\r\n            if (this.statusCode != 0) {\r\n                return html`<uui-tag color=${this._getColor(this.statusCode)}>${this.statusCode}</uui-tag>`\r\n            }\r\n        }\r\n\r\n        return nothing;\r\n    }\r\n}\r\n\r\nexport default ContentAuditStatusCodeLabel;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"content-audit-status-code-label\"]: ContentAuditStatusCodeLabel;\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { customElement, html, LitElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UUIInterfaceColor } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\n@customElement('content-audit-carbon-intensity-label')\r\nexport class ContentAuditCarbonIntensityLabel extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ attribute: true })\r\n    value: string = '';\r\n\r\n    _getColour(): UUIInterfaceColor {\r\n        if (this.value == \"E\" || this.value == \"F\") {\r\n            return \"danger\";\r\n        }\r\n        else if (this.value == \"D\") {\r\n            return \"warning\";\r\n        }\r\n        else return \"positive\";\r\n    }\r\n\r\n    render() {\r\n        if (this.value != null) {\r\n            return html`\r\n                <uui-tag .color=${this._getColour()}>\r\n                    ${this.value}\r\n                </uui-tag>\r\n            `\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentAuditCarbonIntensityLabel;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"content-audit-carbon-intensity-label\"]: ContentAuditCarbonIntensityLabel;\r\n    }\r\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tappend(key, value.toISOString());\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions<T>, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\t// @ts-ignore\n\t\tresolve(options, config.TOKEN),\n\t\t// @ts-ignore\n\t\tresolve(options, config.USERNAME),\n\t\t// @ts-ignore\n\t\tresolve(options, config.PASSWORD),\n\t\t// @ts-ignore\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tlet transformedBody = responseBody;\n\t\t\t\tif (options.responseTransformer && response.ok) {\n\t\t\t\t\ttransformedBody = await options.responseTransformer(responseBody)\n\t\t\t\t}\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? transformedBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { GetAllImagesData, GetAllImagesResponse, GetAllIssuesData, GetAllIssuesResponse, GetDuplicateContentUrlsData, GetDuplicateContentUrlsResponse, GetExternalLinksData, GetExternalLinksResponse, GetHealthScoreResponse, GetInteralLinksData, GetInteralLinksResponse, GetIssueData, GetIssueResponse, GetLatestAuditOverviewResponse, GetLatestAuditDataData, GetLatestAuditDataResponse, GetLatestPageAuditDataData, GetLatestPageAuditDataResponse, GetPagesWithMissingMetadataData, GetPagesWithMissingMetadataResponse, GetOrphanedPagesData, GetOrphanedPagesResponse, StartCrawlResponse, GetSettingsResponse } from './types.gen';\n\nexport class AuditService {\n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getAllImages(data: GetAllImagesData = {}): CancelablePromise<GetAllImagesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/all-images',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getAllIssues(data: GetAllIssuesData = {}): CancelablePromise<GetAllIssuesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/all-issues',\n            query: {\n                skip: data.skip,\n                take: data.take\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getDuplicateContentUrls(data: GetDuplicateContentUrlsData = {}): CancelablePromise<GetDuplicateContentUrlsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/duplicate-content',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getExternalLinks(data: GetExternalLinksData = {}): CancelablePromise<GetExternalLinksResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/external-links',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHealthScore(): CancelablePromise<GetHealthScoreResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/health-score'\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getInteralLinks(data: GetInteralLinksData = {}): CancelablePromise<GetInteralLinksResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/internal-links',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.issueGuid\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getIssue(data: GetIssueData = {}): CancelablePromise<GetIssueResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/issue',\n            query: {\n                issueGuid: data.issueGuid\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLatestAuditOverview(): CancelablePromise<GetLatestAuditOverviewResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/latest-audit'\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @param data.statusCode\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLatestAuditData(data: GetLatestAuditDataData = {}): CancelablePromise<GetLatestAuditDataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/latest-data',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter,\n                statusCode: data.statusCode\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.unique\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getLatestPageAuditData(data: GetLatestPageAuditDataData = {}): CancelablePromise<GetLatestPageAuditDataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/latest-page-data',\n            query: {\n                unique: data.unique\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getPagesWithMissingMetadata(data: GetPagesWithMissingMetadataData = {}): CancelablePromise<GetPagesWithMissingMetadataResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/missing-metadata',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.skip\n     * @param data.take\n     * @param data.filter\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getOrphanedPages(data: GetOrphanedPagesData = {}): CancelablePromise<GetOrphanedPagesResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/orphaned-pages',\n            query: {\n                skip: data.skip,\n                take: data.take,\n                filter: data.filter\n            }\n        });\n    }\n    \n}\n\nexport class CrawlService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static startCrawl(): CancelablePromise<StartCrawlResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/start-crawl'\n        });\n    }\n    \n}\n\nexport class SettingsService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSettings(): CancelablePromise<GetSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/content-audit/api/v1/get-settings'\n        });\n    }\n    \n}","// This file is auto-generated by @hey-api/openapi-ts\n\nexport type AccessibilityDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    accessibilityIssues?: Array<(string)> | null;\n    ariaLabelCount: number;\n    ariaDescribedByCount: number;\n    hasSkipToContent: boolean;\n    hasProperHeadingStructure: boolean;\n    colorContrastIssues?: Array<(string)> | null;\n    createdDate: string;\n};\n\nexport type AuditIssueProperty = {\n    name?: (string) | null;\n    alias?: (string) | null;\n    labelTemplate?: (string) | null;\n    elementName?: (string) | null;\n};\n\nexport type ContentAnalysisDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    wordCount: number;\n    paragraphCount: number;\n    images: number;\n    resources: number;\n    links: number;\n    externalLinks: number;\n    internalLinks: number;\n    readabilityScore: number;\n    keywordDensity?: {\n        [key: string]: (number);\n    } | null;\n    missingAltTextImages?: (string) | null;\n    missingTitleImages?: (string) | null;\n};\n\nexport type ContentAuditSettings = {\n    respectRobotsTxt: boolean;\n    useUmbracoContentIndex: boolean;\n    useSitemapXml: boolean;\n    sitemapUrl: string;\n    maxConcurrentCrawls: number;\n    baseUrl: string;\n};\n\nexport type ContentQualityDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    hasDuplicateContent: boolean;\n    duplicateContentUrls?: Array<(string)> | null;\n    hasThinContent: boolean;\n    contentScore: number;\n    contentGaps?: Array<(string)> | null;\n    contentStrengths?: Array<(string)> | null;\n    createdDate: string;\n};\n\nexport type CrawlDto = {\n    url?: (string) | null;\n    external: boolean;\n    asset: boolean;\n    crawled: boolean;\n    blocked: boolean;\n    unique: string;\n};\n\nexport type EmissionsDto = {\n    emissionsPerPageView: number;\n    carbonRating?: (string) | null;\n};\n\nexport type HealthScoreDto = {\n    healthScore: number;\n    totalPages: number;\n    pagesWithErrors: number;\n};\n\nexport type ImageDto = {\n    entityType: string;\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    isExternal: boolean;\n    size?: (number) | null;\n    statusCode: number;\n    contentType?: (string) | null;\n    altText?: (string) | null;\n    title?: (string) | null;\n    foundPage?: (string) | null;\n    unique: string;\n    createdDate: string;\n    isBackground: boolean;\n};\n\nexport type IssueDto = {\n    unique: string;\n    entityType: string;\n    name: string;\n    description: string;\n    category: string;\n    type: IssueType;\n    priority: IssuePriority;\n    numberOfUrls?: (number) | null;\n    percentOfTotal: number;\n    pages?: Array<(PageAnalysisDto)> | null;\n    images?: Array<(ImageDto)> | null;\n    exposedProperties?: Array<(AuditIssueProperty)> | null;\n    priorityScore: number;\n};\n\nexport enum IssuePriority {\n    LOW = 'Low',\n    MEDIUM = 'Medium',\n    HIGH = 'High'\n}\n\nexport enum IssueType {\n    OPPORTUNITY = 'Opportunity',\n    WARNING = 'Warning',\n    ISSUE = 'Issue'\n}\n\nexport type LinkDto = {\n    unique: string;\n    entityType: string;\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    isExternal: boolean;\n    foundPage?: (string) | null;\n    statusCode: number;\n    contentType?: (string) | null;\n    createdDate: string;\n};\n\nexport type LinkGroupDto = {\n    unique: string;\n    entityType: string;\n    url?: (string) | null;\n    statusCode?: (number) | null;\n    contentType?: (string) | null;\n    links?: Array<(LinkDto)> | null;\n};\n\nexport type MetricDto = {\n    name: MetricName;\n    value: number;\n    rating: MetricRating;\n};\n\nexport enum MetricName {\n    CLS = 'CLS',\n    FCP = 'FCP',\n    FID = 'FID',\n    INP = 'INP',\n    LCP = 'LCP',\n    TTFB = 'TTFB'\n}\n\nexport enum MetricRating {\n    GOOD = 'Good',\n    NEEDS_IMPROVEMENT = 'NeedsImprovement',\n    POOR = 'Poor'\n}\n\nexport type OverviewDto = {\n    runDate?: (string) | null;\n    total?: (number) | null;\n    totalInternal?: (number) | null;\n    totalExternal?: (number) | null;\n    totalAssets?: (number) | null;\n    totalBlocked?: (number) | null;\n};\n\nexport type PageAnalysisDto = {\n    unique: string;\n    entityType: string;\n    links: Array<(LinkDto)>;\n    resources: Array<(ResourceDto)>;\n    images: Array<(ImageDto)>;\n    issues: Array<(IssueDto)>;\n    pageData: (PageDto);\n    seoData: (SeoDto);\n    contentAnalysis: (ContentAnalysisDto);\n    performanceData: (PerformanceDto);\n    accessibilityData: (AccessibilityDto);\n    technicalSeoData: (TechnicalSeoDto);\n    socialMediaData: (SocialMediaDto);\n    contentQualityData: (ContentQualityDto);\n    emissionsData: (EmissionsDto);\n};\n\nexport type PagedImageDtoModel = {\n    total: number;\n    items: Array<(ImageDto)>;\n};\n\nexport type PagedIssueDtoModel = {\n    total: number;\n    items: Array<(IssueDto)>;\n};\n\nexport type PagedLinkGroupDtoModel = {\n    total: number;\n    items: Array<(LinkGroupDto)>;\n};\n\nexport type PagedPageAnalysisDtoModel = {\n    total: number;\n    items: Array<(PageAnalysisDto)>;\n};\n\nexport type PagedPageDtoModel = {\n    total: number;\n    items: Array<(PageDto)>;\n};\n\nexport type PageDto = {\n    entityType: string;\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    originalUrl?: (string) | null;\n    redirect: boolean;\n    redirectType?: (string) | null;\n    redirectStatusCode: number;\n    redirectChain?: Array<(string)> | null;\n    unique: string;\n    statusCode: number;\n};\n\nexport type PerformanceDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    pageLoadTime?: (number) | null;\n    cumulativeLayoutShift?: ((MetricDto) | null);\n    firstContentfulPaint?: ((MetricDto) | null);\n    largestContentfulPaint?: ((MetricDto) | null);\n    timeToInteractive?: ((MetricDto) | null);\n    timeToFirstByte?: ((MetricDto) | null);\n    totalRequests?: (number) | null;\n    totalBytes?: (number) | null;\n    resourceTimings?: Array<(ResourceTimingDto)> | null;\n    createdDate: string;\n};\n\nexport type ResourceDto = {\n    entityType: string;\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    isExternal: boolean;\n    size?: (number) | null;\n    statusCode: number;\n    contentType?: (string) | null;\n    foundPage?: (string) | null;\n    unique: string;\n    createdDate: string;\n};\n\nexport type ResourceTimingDto = {\n    url?: (string) | null;\n    resourceType?: (string) | null;\n    duration?: (number) | null;\n    startTime?: (number) | null;\n    size?: (number) | null;\n};\n\nexport type SeoDto = {\n    runId: number;\n    url?: (string) | null;\n    title?: (string) | null;\n    metaDescription?: (string) | null;\n    canonicalUrl?: (string) | null;\n    h1?: (string) | null;\n    h2s?: Array<(string)> | null;\n    h3s?: Array<(string)> | null;\n    hasNoIndex: boolean;\n    hasNoFollow: boolean;\n    isOrphaned: boolean;\n    openGraphTitle?: (string) | null;\n    openGraphDescription?: (string) | null;\n    openGraphImage?: (string) | null;\n    twitterCard?: (string) | null;\n    twitterTitle?: (string) | null;\n    twitterDescription?: (string) | null;\n    twitterImage?: (string) | null;\n    createdDate: string;\n};\n\nexport type SocialMediaDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    socialShareButtons?: Array<(string)> | null;\n    hasFacebookPixel: boolean;\n    hasTwitterPixel: boolean;\n    hasLinkedInPixel: boolean;\n    socialMediaLinks?: Array<(string)> | null;\n    createdDate: string;\n};\n\nexport type TechnicalSeoDto = {\n    id: number;\n    runId: number;\n    url?: (string) | null;\n    contentType?: (string) | null;\n    charset?: (string) | null;\n    hasGzipCompression: boolean;\n    hasBrowserCaching: boolean;\n    hasHttps: boolean;\n    hasValidHtml: boolean;\n    htmlValidationErrors?: Array<(string)> | null;\n    hasSchemaMarkup: boolean;\n    schemaType?: (string) | null;\n    createdDate: string;\n};\n\nexport type GetAllImagesData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetAllImagesResponse = ((PagedImageDtoModel));\n\nexport type GetAllIssuesData = {\n    skip?: number;\n    take?: number;\n};\n\nexport type GetAllIssuesResponse = ((PagedIssueDtoModel));\n\nexport type GetDuplicateContentUrlsData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetDuplicateContentUrlsResponse = ((PagedPageDtoModel));\n\nexport type GetExternalLinksData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetExternalLinksResponse = ((PagedLinkGroupDtoModel));\n\nexport type GetHealthScoreResponse = ((HealthScoreDto));\n\nexport type GetInteralLinksData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetInteralLinksResponse = ((PagedLinkGroupDtoModel));\n\nexport type GetIssueData = {\n    issueGuid?: string;\n};\n\nexport type GetIssueResponse = ((IssueDto));\n\nexport type GetLatestAuditOverviewResponse = ((OverviewDto));\n\nexport type GetLatestAuditDataData = {\n    filter?: string;\n    skip?: number;\n    statusCode?: number;\n    take?: number;\n};\n\nexport type GetLatestAuditDataResponse = ((PagedPageAnalysisDtoModel));\n\nexport type GetLatestPageAuditDataData = {\n    unique?: string;\n};\n\nexport type GetLatestPageAuditDataResponse = ((PageAnalysisDto));\n\nexport type GetPagesWithMissingMetadataData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetPagesWithMissingMetadataResponse = ((PagedPageAnalysisDtoModel));\n\nexport type GetOrphanedPagesData = {\n    filter?: string;\n    skip?: number;\n    take?: number;\n};\n\nexport type GetOrphanedPagesResponse = ((PagedPageDtoModel));\n\nexport type StartCrawlResponse = (Array<(CrawlDto)>);\n\nexport type GetSettingsResponse = ((ContentAuditSettings));","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { MetricDto, MetricName, MetricRating } from \"../api\";\r\nimport { UUIInterfaceColor } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\n@customElement('content-audit-metric-label')\r\nexport class ContentAuditMetricLabel extends UmbElementMixin(LitElement) {\r\n\r\n    @property({ attribute: false })\r\n    value?: MetricDto;\r\n\r\n    _getColour(): UUIInterfaceColor {\r\n        if (this.value != null) {\r\n            if (this.value.rating == MetricRating.POOR) {\r\n                return \"danger\";\r\n            }\r\n            else if (this.value.rating == MetricRating.NEEDS_IMPROVEMENT) {\r\n                return \"warning\";\r\n            }\r\n            else return \"positive\";\r\n        }\r\n        else return \"positive\";\r\n    }\r\n\r\n    _formatValue(): string {\r\n        if (this.value != null) {\r\n            if (this.value.name == MetricName.CLS) {\r\n                return this.value.value.toFixed(3);\r\n            }\r\n            else {\r\n                let seconds = (this.value.value / 1000) % 60;\r\n                return `${seconds.toFixed(2)}s`;\r\n            }\r\n        }\r\n        else return \"\";\r\n    }\r\n\r\n    override render() {\r\n        if (this.value != null) {\r\n            return html`\r\n                <uui-tag .color=${this._getColour()}>\r\n                    ${this._formatValue()}\r\n                </uui-tag>\r\n            `;\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            uui-tag {\r\n                font-size: 14px;\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditMetricLabel;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [\"content-audit-metric-label\"]: ContentAuditMetricLabel;\r\n    }\r\n}","export interface IssueLabelConfig {\r\n    label: string;\r\n    icon: string;\r\n\tclass: string;\r\n\tcolor: string;\r\n}\r\n\r\nexport interface UmbTableItem {\r\n\tid: string;\r\n\ticon?: string | null;\r\n\tentityType?: string;\r\n\tdata: Array<UmbTableItemData>;\r\n}\r\n\r\nexport interface UmbTableItemData {\r\n\tcolumnAlias: string;\r\n\tvalue: any;\r\n}\r\n\r\nexport interface UmbTableColumn {\r\n\tname: string;\r\n\talias: string;\r\n\telementName?: string;\r\n\twidth?: string;\r\n\tallowSorting?: boolean;\r\n\talign?: 'left' | 'center' | 'right';\r\n\tlabelTemplate?: string;\r\n}\r\n\r\nexport interface UmbTableColumnLayoutElement extends HTMLElement {\r\n\tcolumn: UmbTableColumn;\r\n\titem: UmbTableItem;\r\n\tvalue: any;\r\n}\r\n\r\nexport interface UmbTableConfig {\r\n\tallowSelection: boolean;\r\n\thideIcon?: boolean;\r\n}\r\n\r\nexport class UmbTableSelectedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('selected', { bubbles: true, composed: true });\r\n\t}\r\n}\r\n\r\nexport class UmbTableDeselectedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('deselected', { bubbles: true, composed: true });\r\n\t}\r\n}\r\n\r\nexport class UmbTableOrderedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('ordered', { bubbles: true, composed: true });\r\n\t}\r\n}","export const CONTENT_AUDIT_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit';\r\nexport const CONTENT_AUDIT_CONTEXT_ALIAS = 'Umb.Context.ContentAudit';\r\nexport const CONTENT_AUDIT_ENTITY_TYPE = 'content-audit';\r\n","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { AuditService, GetAllIssuesResponse, GetHealthScoreResponse, GetLatestAuditOverviewResponse, GetPagesWithMissingMetadataResponse } from \"../../api\";\r\n\r\nexport interface AuditDataSource {\r\n    getLatestAuditOverview(): Promise<UmbDataSourceResponse<GetLatestAuditOverviewResponse>>\r\n    getPagesWithMissingMetadata(): Promise<UmbDataSourceResponse<GetPagesWithMissingMetadataResponse>>\r\n    getTopIssues(): Promise<UmbDataSourceResponse<GetAllIssuesResponse>>\r\n    getHealthScore(): Promise<UmbDataSourceResponse<GetHealthScoreResponse>>\r\n}\r\n\r\nexport class ContentAuditDataSource implements AuditDataSource {\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async getLatestAuditOverview(): Promise<UmbDataSourceResponse<GetLatestAuditOverviewResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getLatestAuditOverview());\r\n    }\r\n\r\n    async getPagesWithMissingMetadata(): Promise<UmbDataSourceResponse<GetPagesWithMissingMetadataResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getPagesWithMissingMetadata());\r\n    }\r\n\r\n    async getTopIssues(): Promise<UmbDataSourceResponse<GetAllIssuesResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getAllIssues({ skip: 0, take: 5 }));\r\n    }\r\n\r\n    async getHealthScore(): Promise<UmbDataSourceResponse<GetHealthScoreResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, AuditService.getHealthScore());\r\n    }\r\n}","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { GetSettingsResponse, SettingsService } from \"../../api\";\r\n\r\nexport interface SettingsDataSource {\r\n    getSettings(): Promise<UmbDataSourceResponse<GetSettingsResponse>>\r\n}\r\n\r\nexport class ContentAuditSettingsDataSource implements SettingsDataSource {\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async getSettings(): Promise<UmbDataSourceResponse<GetSettingsResponse>> {\r\n        return await tryExecuteAndNotify(this.#host, SettingsService.getSettings());\r\n    }\r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { ContentAuditDataSource } from \"./sources/audit.source\";\r\nimport { ContentAuditSettingsDataSource } from \"./sources/settings.source\";\r\n\r\nexport class ContentAuditRepository extends UmbControllerBase {\r\n    #auditDataSource: ContentAuditDataSource;\r\n    #settingsDataSource: ContentAuditSettingsDataSource;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n\r\n        this.#auditDataSource = new ContentAuditDataSource(this);\r\n        this.#settingsDataSource = new ContentAuditSettingsDataSource(this);\r\n    }\r\n\r\n    async getLatestAuditOverview() {\r\n        return this.#auditDataSource.getLatestAuditOverview();\r\n    }\r\n\r\n    async getPagesWithMissingMetadata() {\r\n        return this.#auditDataSource.getPagesWithMissingMetadata();\r\n    }\r\n\r\n    async getTopIssues() {\r\n        return this.#auditDataSource.getTopIssues();\r\n    }\r\n\r\n    async getHealthScore() {\r\n        return this.#auditDataSource.getHealthScore();\r\n    }\r\n\r\n    async getSettings() {\r\n        return this.#settingsDataSource.getSettings();\r\n    }\r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UMB_WORKSPACE_CONTEXT, UmbWorkspaceContext } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { CONTENT_AUDIT_ENTITY_TYPE, CONTENT_AUDIT_WORKSPACE_ALIAS } from \"../workspace/constants\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { ContentAuditRepository } from \"../repository/content-audit.repository\";\r\nimport { UmbArrayState, UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\r\nimport { IssueDto, OverviewDto, ContentAuditSettings, HealthScoreDto, PageAnalysisDto } from \"../api\";\r\n\r\nexport class ContentAuditContext extends UmbControllerBase implements UmbWorkspaceContext {\r\n\tpublic readonly workspaceAlias: string = CONTENT_AUDIT_WORKSPACE_ALIAS;\r\n\r\n\tgetEntityType(): string {\r\n\t\treturn CONTENT_AUDIT_ENTITY_TYPE;\r\n\t}\r\n\r\n\t#repository: ContentAuditRepository;\r\n\r\n\t#latestAuditOverview = new UmbObjectState<OverviewDto | undefined>(undefined);\r\n\tpublic readonly latestAuditOverview = this.#latestAuditOverview.asObservable();\r\n\r\n\t#pagesWithMissingMetadata = new UmbArrayState<PageAnalysisDto>([], (x) => x.unique);\r\n\tpublic readonly pagesWithMissingMetadata = this.#pagesWithMissingMetadata.asObservable();\r\n\r\n\t#topIssues = new UmbArrayState<IssueDto>([], (x) => x.name);\r\n\tpublic readonly topIssues = this.#topIssues.asObservable();\r\n\r\n\t#healthScore = new UmbObjectState<HealthScoreDto | undefined>(undefined);\r\n\tpublic readonly healthScore = this.#healthScore.asObservable();\r\n\r\n\t#settings = new UmbObjectState<ContentAuditSettings | undefined>(undefined);\r\n\tpublic readonly settings = this.#settings.asObservable();\r\n\t\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n\t\tthis.provideContext(CONTENT_AUDIT_CONTEXT_TOKEN, this);\r\n\r\n\t\tthis.#repository = new ContentAuditRepository(this);\r\n\t}\r\n\r\n\tasync getLatestAuditOverview() {\r\n\t\tconst { data } = await this.#repository.getLatestAuditOverview();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#latestAuditOverview.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPagesWithMissingMetadata() {\r\n\t\tconst { data } = await this.#repository.getPagesWithMissingMetadata();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#pagesWithMissingMetadata.setValue(data.items);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getTopIssues() {\r\n\t\tconst { data } = await this.#repository.getTopIssues();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#topIssues.setValue(data.items);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getHealthScore() {\r\n\t\tconst { data } = await this.#repository.getHealthScore();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#healthScore.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getSettings() {\r\n\t\tconst { data } = await this.#repository.getSettings();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#settings.setValue(data);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ContentAuditContext;\r\n\r\nexport const CONTENT_AUDIT_CONTEXT_TOKEN = new UmbContextToken<ContentAuditContext>(\r\n\t'ContentAuditContext',\r\n);\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { html, LitElement } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { customElement } from \"lit/decorators.js\";\r\nimport ContentAuditContext from \"../context/audit.context\";\r\n\r\n@customElement('content-audit-workspace-root')\r\nexport class ContentAuditWorkspaceRootElement extends UmbElementMixin(LitElement) {\r\n\r\n\t_workspaceContext: ContentAuditContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._workspaceContext = new ContentAuditContext(this);\r\n    }\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-editor headline=\"Content Audit\" .enforceNoFooter=${true}>\r\n\t\t\t</umb-workspace-editor>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default ContentAuditWorkspaceRootElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-workspace-root': ContentAuditWorkspaceRootElement;\r\n    }\r\n}","export const CONTENT_AUDIT_MENU_0_ALIAS = 'Umb.Menu.ContentAudit';\r\nexport const CONTENT_AUDIT_MENU_1_ALIAS = 'Umb.Menu.ContentMetadata';\r\nexport const CONTENT_AUDIT_MENU_2_ALIAS = 'Umb.Menu.ContentPerformance';","export const CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.Issues';\r\nexport const CONTENT_AUDIT_ISSUES_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.Issues.Table';","export const CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditIssuesCollection\";","import { UmbCollectionDataSource, UmbCollectionFilterModel } from \"@umbraco-cms/backoffice/collection\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { IssueDto, AuditService } from \"../../../../api\";\r\nimport { tryExecuteAndNotify } from \"@umbraco-cms/backoffice/resources\";\r\n\r\nexport class ContentAuditIssuesCollectionDataSource implements UmbCollectionDataSource<IssueDto> {\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getCollection(filter: UmbCollectionFilterModel) {\r\n\t\tconst { data, error } = await tryExecuteAndNotify(this.#host, AuditService.getAllIssues(filter));\r\n\r\n\t\tif (error) {\r\n\t\t\treturn { error };\r\n\t\t}\r\n\r\n\t\tif (!data) {\r\n\t\t\treturn { data: { items: [], total: 0 } };\r\n\t\t}\r\n\r\n\t\tconst { items, total } = data;\r\n\r\n\t\treturn { data: { items: items, total } };\r\n\t}\r\n}","import { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionFilterModel, UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport { ContentAuditIssuesCollectionDataSource } from \"./issue-collection.server.data-source\";\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { IssueDto } from '../../../../api';\r\n\r\nexport class ContentAuditIssuesCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository<IssueDto, UmbCollectionFilterModel> {\r\n    #collectionSource: ContentAuditIssuesCollectionDataSource;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n        this.#collectionSource = new ContentAuditIssuesCollectionDataSource(host);\r\n    }\r\n\r\n    async requestCollection(filter: UmbCollectionFilterModel) {\r\n        return this.#collectionSource.getCollection(filter);\r\n    }\r\n}\r\n\r\nexport default ContentAuditIssuesCollectionRepository;","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { html, LitElement, nothing, customElement, property, css } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n@customElement('content-audit-issues-table-name-column-layout')\r\nexport class ContentAuditIssuesTableNameColumnLayout extends LitElement {\r\n\t@property({ attribute: false })\r\n\tvalue!: { unique: string; name: string, category: string, description: string };\r\n\r\n\toverride render() {\r\n\t\tif (!this.value) return nothing;\r\n\t\treturn html`\r\n\t\t\t<span>\r\n\t\t\t\t<a href=${'section/audit/workspace/issues/edit/' + this.value.unique}>\r\n\t\t\t\t\t<strong>${this.value.category}: ${this.value.name}</strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<br/>${this.value.description}\r\n\t\t\t</span>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tspan {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: var(--uui-size-2) 0;\r\n\t\t\t}\r\n\t\t`\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'content-audit-issues-table-name-column-layout': ContentAuditIssuesTableNameColumnLayout;\r\n\t}\r\n}\r\n","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { IssueDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\n\r\nimport './column-layouts/issues-table-name-column-layout.element';\r\n\r\n@customElement('content-audit-issues-table-collection-view')\r\nexport class ContentAuditIssuesTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @property({ type: Array, attribute: false })\r\n    data: Array<IssueDto> = [];\r\n\r\n    updated(changedProperties: Map<string, any>) {\r\n        if (changedProperties.has('data')) {\r\n            if (this.data.length !== 0) {\r\n                this.#createTableItems(this.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'Issue',\r\n            alias: 'name',\r\n            elementName: 'content-audit-issues-table-name-column-layout'\r\n        },\r\n        {\r\n            name: 'Type',\r\n            alias: 'type'\r\n        },\r\n        {\r\n            name: 'Priority',\r\n            alias: 'priority'\r\n        },\r\n        {\r\n            name: 'Number of URLs affected',\r\n            alias: 'numberOfUrls'\r\n        },\r\n        {\r\n            name: 'Percentage of all pages',\r\n            alias: 'percentOfTotal'\r\n        },\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<IssueDto>;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n            this.#observeCollectionItems();\r\n        });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(issues: IssueDto[]) {\r\n        this._tableItems = issues.map((issue) => {\r\n            return {\r\n                id: issue.unique,\r\n                entityType: 'issue-type',\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'name',\r\n                        value: {\r\n                            unique: issue.unique,\r\n                            name: issue.name,\r\n                            category: issue.category,\r\n                            description: issue.description\r\n                        }\r\n                    },\r\n                    {\r\n                        columnAlias: 'type',\r\n                        value: html`<content-audit-issue-type-label .type=${issue.type}></content-audit-issue-type-label`\r\n                    },\r\n                    {\r\n                        columnAlias: 'priority',\r\n                        value: html`<content-audit-priority-type-label .type=${issue.priority}></content-audit-priority-type-label>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'numberOfUrls',\r\n                        value: issue.numberOfUrls\r\n                    },\r\n                    {\r\n                        columnAlias: 'percentOfTotal',\r\n                        value: `${issue.percentOfTotal.toFixed(0)}%`\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditIssuesTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-issues-table-collection-view': ContentAuditIssuesTableCollectionViewElement;\r\n    }\r\n}\r\n","export const AUDIT_ALL_PAGES_ENTITY_TYPE = 'all-pages';\r\nexport const AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE = 'all-pages-root';\r\n\r\nexport type AuditAllPagesEntityType = typeof AUDIT_ALL_PAGES_ENTITY_TYPE;\r\nexport type AuditAllPagesRootEntityType = typeof AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.AllPages',\r\n    name: 'All Pages Menu Item',\r\n    weight: 10000,\r\n    meta: {\r\n        label: 'All Pages',\r\n        icon: 'icon-browser-window',\r\n        entityType: AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_ALL_PAGES_ROOT_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit.AllPagesRoot';\r\nexport const CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit.AllPages';","import { CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS } from '../constants';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\tname: 'All Pages Workspace',\r\n\t\tapi: () => import('./all-pages-workspace.context'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'all-pages',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.AllPages.Details',\r\n\t\tname: 'All Pages Workspace Details View',\r\n\t\tjs: () => import('./views/all-pages-details-workspace-view.element'),\r\n\t\tweight: 100,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_details',\r\n\t\t\tpathname: 'details',\r\n\t\t\ticon: 'info',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.AllPages.Links',\r\n\t\tname: 'All Pages Workspace Links View',\r\n\t\tjs: () => import('./views/all-pages-links-workspace-view.element'),\r\n\t\tweight: 90,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Links',\r\n\t\t\tpathname: 'links',\r\n\t\t\ticon: 'link'\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.AllPages.Images',\r\n\t\tname: 'All Pages Workspace Images View',\r\n\t\tjs: () => import('./views/all-pages-images-workspace-view.element'),\r\n\t\tweight: 80,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Images',\r\n\t\t\tpathname: 'images',\r\n\t\t\ticon: 'picture',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.AllPages.Resources',\r\n\t\tname: 'All Pages Workspace Resources View',\r\n\t\tjs: () => import('./views/all-pages-resources-workspace-view.element'),\r\n\t\tweight: 70,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Resources',\r\n\t\t\tpathname: 'resources',\r\n\t\t\ticon: 'icon-script',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.AllPages.Issues',\r\n\t\tname: 'All Pages Workspace Issues View',\r\n\t\tjs: () => import('./views/all-pages-issues-workspace-view.element'),\r\n\t\tweight: 60,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Issues',\r\n\t\t\tpathname: 'issues',\r\n\t\t\ticon: 'alert',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","export const CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.AllPages';\r\nexport const CONTENT_AUDIT_ALL_PAGES_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.AllPages.Table';","export const CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditAllPagesCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { PageAnalysisDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\n\r\n@customElement('content-audit-all-pages-table-collection-view')\r\nexport class ContentAuditAllPagesTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Content Type',\r\n            alias: 'contentType'\r\n        },\r\n        {\r\n            name: 'Status Code',\r\n            alias: 'statusCode'\r\n        },\r\n        {\r\n            name: 'Redirected',\r\n            alias: 'redirect'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<PageAnalysisDto>;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n            this.#observeCollectionItems();\r\n        });\r\n\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(pages: PageAnalysisDto[]) {\r\n        this._tableItems = pages.map((page) => {\r\n            return {\r\n                id: page?.unique,\r\n                entityType: page?.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${'section/audit/workspace/all-pages/edit/' + page.unique}>${page.pageData?.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'contentType',\r\n                        value: page.technicalSeoData?.contentType,\r\n                    },\r\n                    {\r\n                        columnAlias: 'statusCode',\r\n                        value: html`<content-audit-status-code-label .statusCode=${page.pageData?.statusCode}></content-audit-status-code-label>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'redirect',\r\n                        value: page.pageData.redirect ? 'Yes' : 'No'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditAllPagesTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-all-pages-table-collection-view': ContentAuditAllPagesTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS } from '../../collection';\r\nimport { AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE } from '../../entity';\r\nimport { CONTENT_AUDIT_ALL_PAGES_ROOT_WORKSPACE_ALIAS } from '../constants';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: CONTENT_AUDIT_ALL_PAGES_ROOT_WORKSPACE_ALIAS,\r\n        name: 'All Pages Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE,\r\n            headline: 'All Pages'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.AllPages.Collection',\r\n        name: 'Content Audit All Pages Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: CONTENT_AUDIT_ALL_PAGES_ROOT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    }\r\n]","import { manifests as allPagesManifests } from './all-pages/manifests';\r\nimport { manifests as allPagesRootManifests } from './all-pages-root/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...allPagesManifests, ...allPagesRootManifests];\r\n","import { CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'All Pages Collection Repository',\r\n\t\tapi: () => import('./all-pages-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS, CONTENT_AUDIT_ALL_PAGES_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'All Pages Table Collection View',\r\n\t\tjs: () => import('./table/all-pages-table-collection-view.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS,\r\n\t\tname: 'All Pages Collection',\r\n\t\telement: () => import('./all-pages.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","export const CONTENT_AUDIT_ALL_PAGES_DETAIL_REPOSITORY_ALIAS = 'Umb.Repository.ContentAudit.AllPages.Detail';\r\nexport const CONTENT_AUDIT_ALL_PAGES_DETAIL_STORE_ALIAS = 'Umb.Store.ContentAudit.AllPages.Detail';\r\n","import { CONTENT_AUDIT_ALL_PAGES_DETAIL_REPOSITORY_ALIAS, CONTENT_AUDIT_ALL_PAGES_DETAIL_STORE_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_DETAIL_REPOSITORY_ALIAS,\r\n\t\tname: 'All Pages Detail Repository',\r\n\t\tapi: () => import('./all-pages-detail.repository'),\r\n\t},\r\n\t{\r\n\t\ttype: 'store',\r\n\t\talias: CONTENT_AUDIT_ALL_PAGES_DETAIL_STORE_ALIAS,\r\n\t\tname: 'All Pages Detail Store',\r\n\t\tapi: () => import('./all-pages-detail.store'),\r\n\t},\r\n];\r\n","import { manifests as detailManifests } from './detail/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...detailManifests];\r\n","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\nimport { manifests as repositoryManifests } from './repository/manifest';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests,\r\n    ...repositoryManifests\r\n]","export const AUDIT_ISSUES_ENTITY_TYPE = 'issues';\r\nexport const AUDIT_ISSUES_ROOT_ENTITY_TYPE = 'issues-root';\r\n\r\nexport type AuditIssuesEntityType = typeof AUDIT_ISSUES_ENTITY_TYPE;\r\nexport type AuditIssuesRootEntityType = typeof AUDIT_ISSUES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_ISSUES_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.Issues',\r\n    name: 'Issues Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Issues',\r\n        icon: 'icon-alert',\r\n        entityType: AUDIT_ISSUES_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_ISSUES_ROOT_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit.IssuesRoot';\r\nexport const CONTENT_AUDIT_ISSUES_WORKSPACE_ALIAS = 'Umb.Workspace.ContentAudit.Issues';","import { CONTENT_AUDIT_ISSUES_WORKSPACE_ALIAS } from '../constants';\r\nimport { UMB_WORKSPACE_CONDITION_ALIAS } from '@umbraco-cms/backoffice/workspace';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspace',\r\n\t\tkind: 'routable',\r\n\t\talias: CONTENT_AUDIT_ISSUES_WORKSPACE_ALIAS,\r\n\t\tname: 'Issues Workspace',\r\n\t\tapi: () => import('./issues-workspace.context'),\r\n\t\tmeta: {\r\n\t\t\tentityType: 'issues',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: 'Umb.WorkspaceView.ContentAudit.Issues.Details',\r\n\t\tname: 'Issues Workspace Details View',\r\n\t\tjs: () => import('./views/issues-details-workspace-view.element'),\r\n\t\tweight: 90,\r\n\t\tmeta: {\r\n\t\t\tlabel: '#general_details',\r\n\t\t\tpathname: 'details',\r\n\t\t\ticon: 'edit',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_WORKSPACE_CONDITION_ALIAS,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ISSUES_WORKSPACE_ALIAS,\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n];\r\n","import { CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS } from '../../collection';\r\nimport { AUDIT_ISSUES_ROOT_ENTITY_TYPE } from '../../entity';\r\nimport { CONTENT_AUDIT_ISSUES_ROOT_WORKSPACE_ALIAS } from '../constants';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: CONTENT_AUDIT_ISSUES_ROOT_WORKSPACE_ALIAS,\r\n        name: 'Issues Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_ISSUES_ROOT_ENTITY_TYPE,\r\n            headline: 'Issues'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.Issues.Collection',\r\n        name: 'Content Audit Issues Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: CONTENT_AUDIT_ISSUES_ROOT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    }\r\n]","import { manifests as issuesManifests } from './issues/manifests';\r\nimport { manifests as issuesRootManifests } from './issues-root/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...issuesManifests, ...issuesRootManifests];\r\n","import { CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Issue Collection Repository',\r\n\t\tapi: () => import('./issue-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS, CONTENT_AUDIT_ISSUES_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_ISSUES_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Issues Table Collection View',\r\n\t\tjs: () => import('./table/issues-table-collection-view.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS,\r\n\t\tname: 'Issues Collection',\r\n\t\telement: () => import('./issues.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","export const CONTENT_AUDIT_ISSUES_DETAIL_REPOSITORY_ALIAS = 'Umb.Repository.ContentAudit.Issues.Detail';\r\nexport const CONTENT_AUDIT_ISSUES_DETAIL_STORE_ALIAS = 'Umb.Store.ContentAudit.Issues.Detail';\r\n","import { CONTENT_AUDIT_ISSUES_DETAIL_REPOSITORY_ALIAS, CONTENT_AUDIT_ISSUES_DETAIL_STORE_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_ISSUES_DETAIL_REPOSITORY_ALIAS,\r\n\t\tname: 'Issues Detail Repository',\r\n\t\tapi: () => import('./issues-detail.repository'),\r\n\t},\r\n\t{\r\n\t\ttype: 'store',\r\n\t\talias: CONTENT_AUDIT_ISSUES_DETAIL_STORE_ALIAS,\r\n\t\tname: 'Issues Detail Store',\r\n\t\tapi: () => import('./issues-detail.store'),\r\n\t},\r\n];\r\n","import { manifests as detailManifests } from './detail/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [...detailManifests];\r\n","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\nimport { manifests as repositoryManifests } from './repository/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests,\r\n    ...repositoryManifests\r\n]","export const AUDIT_STATUS_CODES_ENTITY_TYPE = 'status-codes';\r\nexport const AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE = 'status-codes-root';\r\n\r\nexport type AuditStatusCodesEntityType = typeof AUDIT_STATUS_CODES_ENTITY_TYPE;\r\nexport type AuditStatusCodesRootEntityType = typeof AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.StatusCodes',\r\n    name: 'Status Codes Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Status Codes',\r\n        icon: 'icon-stop-alt',\r\n        entityType: AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.StatusCodes';\r\nexport const CONTENT_AUDIT_STATUS_CODES_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.StatusCodes.Table';","export const CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditStatusCodesCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { PageAnalysisDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-status-codes-table-collection-view')\r\nexport class ContentAuditStatusCodesTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Content Type',\r\n            alias: 'contentType'\r\n        },\r\n        {\r\n            name: 'Status Code',\r\n            alias: 'statusCode'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<PageAnalysisDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(pages: PageAnalysisDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = pages.map((page) => {\r\n            const modalEditPath =\r\n                routeBuilder({ entityType: page.entityType }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.unique });\r\n\r\n            return {\r\n                id: page?.unique,\r\n                entityType: page?.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${modalEditPath}>${page.pageData?.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'contentType',\r\n                        value: page.technicalSeoData?.contentType,\r\n                    },\r\n                    {\r\n                        columnAlias: 'statusCode',\r\n                        value: html`<content-audit-status-code-label .statusCode=${page.pageData?.statusCode}></content-audit-status-code-label>`\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditStatusCodesTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-status-codes-table-collection-view': ContentAuditStatusCodesTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.StatusCodes';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Status Codes Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE,\r\n            headline: 'Status Codes'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.StatusCodes.Collection',\r\n        name: 'Content Audit Status Codes Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Status Codes Collection Repository',\r\n\t\tapi: () => import('./status-codes-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS, CONTENT_AUDIT_STATUS_CODES_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_STATUS_CODES_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Status Codes Table Collection View',\r\n\t\tjs: () => import('./table/status-codes-table-collection-view.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS,\r\n\t\tname: 'Status Codes Collection',\r\n\t\telement: () => import('./status-codes.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_ORPHANED_PAGES_ENTITY_TYPE = 'orphaned-pages';\r\nexport const AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE = 'orphaned-pages-root';\r\n\r\nexport type AuditOrphanedPagesEntityType = typeof AUDIT_ORPHANED_PAGES_ENTITY_TYPE;\r\nexport type AuditOrphanedPagesRootEntityType = typeof AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_1_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.OrphanedPages',\r\n    name: 'Orphaned Pages Menu Item',\r\n    weight: 100,\r\n    meta: {\r\n        label: 'Orphaned Pages',\r\n        icon: 'icon-tactics',\r\n        entityType: AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_1_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.OrphanedPages';\r\nexport const CONTENT_AUDIT_ORPHANED_PAGES_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.OrphanedPages.Table';","export const CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditOrphanedPagesCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { PageDto } from '../../../../../api';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-orphaned-pages-table-collection-view')\r\nexport class ContentAuditOrphanedPagesTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<PageDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(urls: PageDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = urls.map((page) => {\r\n            const modalEditPath =\r\n                routeBuilder({ entityType: 'document' }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.unique });\r\n\r\n            return {\r\n                id: page.unique,\r\n                entityType: page.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${modalEditPath}>${page.url}</a>`\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditOrphanedPagesTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-orphaned-pages-table-collection-view': ContentAuditOrphanedPagesTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.OrphanedPages';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Orphaned Pages Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE,\r\n            headline: 'Orphaned Pages'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.OrphanedPages.Collection',\r\n        name: 'Content Audit Orphaned Pages Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Orphaned Pages Collection Repository',\r\n\t\tapi: () => import('./orphaned-pages-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS, CONTENT_AUDIT_ORPHANED_PAGES_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_ORPHANED_PAGES_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Orphaned Pages Table Collection View',\r\n\t\tjs: () => import('./table/orphaned-pages-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS,\r\n\t\tname: 'Orphaned Pages Collection',\r\n\t\telement: () => import('./orphaned-pages.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_IMAGES_ALT_TEXT_ENTITY_TYPE = 'images-alt-text';\r\nexport const AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE = 'images-alt-text-root';\r\n\r\nexport type AuditImagesAltTextEntityType = typeof AUDIT_IMAGES_ALT_TEXT_ENTITY_TYPE;\r\nexport type AuditImagesAltTextRootEntityType = typeof AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_1_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.ImagesAltText',\r\n    name: 'Image Alt Text Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Alt Text',\r\n        icon: 'icon-picture',\r\n        entityType: AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_1_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.ImagesAltText';\r\nexport const CONTENT_AUDIT_IMAGES_ALT_TEXT_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.ImagesAltText.Table';","export const CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditImagesAltTextCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { ImageDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-images-alt-text-table-collection-view')\r\nexport class ContentAuditImagesAltTextTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Found on page',\r\n            alias: 'foundPage'\r\n        },\r\n        {\r\n            name: 'Alt text',\r\n            alias: 'altText'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<ImageDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(images: ImageDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = images.map((image) => {\r\n            const modalDocumentEditPath =\r\n                routeBuilder({ entityType: 'document' }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: image.unique });\r\n\r\n            return {\r\n                id: image.unique,\r\n                entityType: image.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: image.url\r\n                    },\r\n                    {\r\n                        columnAlias: 'foundPage',\r\n                        value: html`<a href=${modalDocumentEditPath}>${image.foundPage}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'altText',\r\n                        value: image.altText\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditImagesAltTextTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-images-alt-text-table-collection-view': ContentAuditImagesAltTextTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.ImagesAltText';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Images Alt Text Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE,\r\n            headline: 'Image Alt Text'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.ImagesAltText.Collection',\r\n        name: 'Content Audit Images Alt Text Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Images Alt Text Collection Repository',\r\n\t\tapi: () => import('./images-alt-text-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS, CONTENT_AUDIT_IMAGES_ALT_TEXT_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_IMAGES_ALT_TEXT_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Orphaned Pages Table Collection View',\r\n\t\tjs: () => import('./table/images-alt-text-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS,\r\n\t\tname: 'Images Alt Text Pages Collection',\r\n\t\telement: () => import('./images-alt-text.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_OUTBOUND_LINKS_ENTITY_TYPE = 'outbound-links';\r\nexport const AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE = 'outbound-links-root';\r\n\r\nexport type AuditOutboundLinksEntityType = typeof AUDIT_OUTBOUND_LINKS_ENTITY_TYPE;\r\nexport type AuditOutboundLinksRootEntityType = typeof AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.OutboundLinks',\r\n    name: 'Outbound Links Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Outbound Links',\r\n        icon: 'icon-window-popout',\r\n        entityType: AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.OutboundLinks';\r\nexport const CONTENT_AUDIT_OUTBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.OutboundLinks.Table';","export const CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditOutboundLinksCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { LinkGroupDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\n\r\n@customElement('content-audit-outbound-links-table-collection-view')\r\nexport class ContentAuditddOutboundLinksTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Status Code',\r\n            alias: 'statusCode'\r\n        },\r\n        {\r\n            name: 'Content Type',\r\n            alias: 'contentType'\r\n        },\r\n        {\r\n            name: 'Outlinks',\r\n            alias: 'outlinks'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<LinkGroupDto>;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n            this.#observeCollectionItems();\r\n        });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(linkGroups: LinkGroupDto[]) {\r\n        this._tableItems = linkGroups.map((linkGroup) => {\r\n            return {\r\n                id: linkGroup.unique,\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=\"${linkGroup.url}\" target=\"_blank\">${linkGroup.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'statusCode',\r\n                        value: html`<content-audit-status-code-label .statusCode=${linkGroup.statusCode}></content-audit-status-code-label>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'contentType',\r\n                        value: linkGroup.contentType\r\n                    },\r\n                    {\r\n                        columnAlias: 'outlinks',\r\n                        value: linkGroup.links?.length\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditddOutboundLinksTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-outbound-links-table-collection-view': ContentAuditddOutboundLinksTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.OutboundLinks';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Outbound Links Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n            headline: 'Outbound Links'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.OutboundLinks.Collection',\r\n        name: 'Content Audit Outbound Links Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Outbound Links Collection Repository',\r\n\t\tapi: () => import('./outbound-links-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS, CONTENT_AUDIT_OUTBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_OUTBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Outbound Links Table Collection View',\r\n\t\tjs: () => import('./table/outbound-links-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS,\r\n\t\tname: 'Outbound Links Pages Collection',\r\n\t\telement: () => import('./outbound-links.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_INBOUND_LINKS_ENTITY_TYPE = 'inbound-links';\r\nexport const AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE = 'inbound-links-root';\r\n\r\nexport type AuditInboundLinksEntityType = typeof AUDIT_INBOUND_LINKS_ENTITY_TYPE;\r\nexport type AuditInboundLinksRootEntityType = typeof AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.InboundLinks',\r\n    name: 'Inbound Links Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Inbound Links',\r\n        icon: 'icon-window-popin',\r\n        entityType: AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_0_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.InboundLinks';\r\nexport const CONTENT_AUDIT_INBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.InboundLinks.Table';","export const CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditInboundLinksCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { LinkGroupDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\n\r\n@customElement('content-audit-inbound-links-table-collection-view')\r\nexport class ContentAuditInboundLinksTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Status Code',\r\n            alias: 'statusCode'\r\n        },\r\n        {\r\n            name: 'Content Type',\r\n            alias: 'contentType'\r\n        },\r\n        {\r\n            name: 'Inlinks',\r\n            alias: 'inlinks'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<LinkGroupDto>;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n            this.#observeCollectionItems();\r\n        });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(linkGroups: LinkGroupDto[]) {\r\n        this._tableItems = linkGroups.map((linkGroup) => {\r\n            return {\r\n                id: linkGroup.unique,\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=\"${linkGroup.url}\" target=\"_blank\">${linkGroup.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'statusCode',\r\n                        value: html`<content-audit-status-code-label .statusCode=${linkGroup.statusCode}></content-audit-status-code-label>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'contentType',\r\n                        value: linkGroup.contentType\r\n                    },\r\n                    {\r\n                        columnAlias: 'inlinks',\r\n                        value: linkGroup.links?.length\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditInboundLinksTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-inbound-links-table-collection-view': ContentAuditInboundLinksTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.InboundLinks';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Inbound Links Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE,\r\n            headline: 'Inbound Links'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.InboundLinks.Collection',\r\n        name: 'Content Audit Inbound Links Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Inbound Links Collection Repository',\r\n\t\tapi: () => import('./inbound-links-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS, CONTENT_AUDIT_INBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_INBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Inbound Links Table Collection View',\r\n\t\tjs: () => import('./table/inbound-links-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS,\r\n\t\tname: 'Inbound Links Pages Collection',\r\n\t\telement: () => import('./inbound-links.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_METADATA_ENTITY_TYPE = 'metadata';\r\nexport const AUDIT_METADATA_ROOT_ENTITY_TYPE = 'metadata-root';\r\n\r\nexport type AuditMetadataEntityType = typeof AUDIT_METADATA_ENTITY_TYPE;\r\nexport type AuditMetadataRootEntityType = typeof AUDIT_METADATA_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_METADATA_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.Metadata',\r\n    name: 'Metadata Menu Item',\r\n    weight: 2000,\r\n    meta: {\r\n        label: 'Metadata',\r\n        icon: 'icon-tags',\r\n        entityType: AUDIT_METADATA_ROOT_ENTITY_TYPE,\r\n        menus: [\"Umb.Menu.ContentMetadata\"],        \r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_METADATA_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.Metadata';\r\nexport const CONTENT_AUDIT_METADATA_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.Metadata.Table';","import { CONTENT_AUDIT_METADATA_COLLECTION_ALIAS } from '../collection/constants';\r\nimport { AUDIT_METADATA_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.Metadata';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Metadata Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_METADATA_ROOT_ENTITY_TYPE,\r\n            headline: 'Metadata'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.Metadata.Collection',\r\n        name: 'Content Audit Metadata Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_METADATA_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","export const CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditMetadataCollection\";","import { CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Metadata Collection Repository',\r\n\t\tapi: () => import('./metadata-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_METADATA_COLLECTION_ALIAS, CONTENT_AUDIT_METADATA_TABLE_COLLECTION_VIEW_ALIAS } from '../constants';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_METADATA_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Metadata Table Collection View',\r\n\t\tjs: () => import('./table/metadata-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_METADATA_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_METADATA_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_METADATA_COLLECTION_ALIAS,\r\n\t\tname: 'Metadata Collection',\r\n\t\telement: () => import('./metadata.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","//import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\n//import { AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE } from '../entity';\r\n//import { CONTENT_AUDIT_MENU_1_ALIAS } from \"../../constants\";\r\n\r\n//const menuItem: ManifestMenuItem = {\r\n//    type: 'menuItem',\r\n//    alias: 'Umb.MenuItem.ContentAudit.DuplicateContent',\r\n//    name: 'Duplicate Content Menu Item',\r\n//    weight: 3000,\r\n//    meta: {\r\n//        label: 'Duplicate Content',\r\n//        icon: 'icon-documents',\r\n//        entityType: AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE,\r\n//        menus: [CONTENT_AUDIT_MENU_1_ALIAS],\r\n//    }\r\n//};\r\n\r\n//export const manifests = [menuItem];\r\n\r\nexport const manifests = [];","export const CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.DuplicateContent';\r\nexport const CONTENT_AUDIT_DUPLICATE_CONTENT_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.DuplicateContent.Table';","export const CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditDuplicateContentCollection\";","//import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n//import { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\n//import { InternalPageGroupDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\n//import { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\n//import { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-duplicate-content-table-collection-view')\r\nexport class ContentAuditDuplicateContentTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Duplicate pages',\r\n            alias: 'duplicatePages'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    //#collectionContext?: UmbDefaultCollectionContext<InternalPageGroupDto>;\r\n    //#routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        //this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n        //    this.#collectionContext = instance;\r\n        //});\r\n\r\n        //this.#registerModalRoute();\r\n    }\r\n\r\n    //#registerModalRoute() {\r\n    //    new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n    //        .addAdditionalPath(':entityType')\r\n    //        .onSetup((params) => {\r\n    //            return { data: { entityType: params.entityType, preset: {} } };\r\n    //        })\r\n    //        .observeRouteBuilder((routeBuilder) => {\r\n    //            //this.#routeBuilder = routeBuilder;\r\n\r\n    //            //this.#observeCollectionItems();\r\n    //        });\r\n    //}\r\n\r\n    //#observeCollectionItems() {\r\n    //    if (!this.#collectionContext) return;\r\n    //    this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    //}\r\n\r\n    //#createTableItems(pages: InternalPageGroupDto[]) {\r\n    //    const routeBuilder = this.#routeBuilder;\r\n    //    if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n    //    this._tableItems = pages.map((page) => {\r\n    //        const modalEditPath =\r\n    //            routeBuilder({ entityType: 'document' }) +\r\n    //            UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.unique });\r\n\r\n    //        return {\r\n    //            id: page.unique,\r\n    //            entityType: page.entityType,\r\n    //            icon: 'icon-alert',\r\n    //            data: [\r\n    //                {\r\n    //                    columnAlias: 'url',\r\n    //                    value: html`<a href=${modalEditPath}>${page.url}</a>`\r\n    //                },\r\n    //                {\r\n    //                    columnAlias: 'duplicatePages',\r\n    //                    value: page.internalPages?.length\r\n    //                }\r\n    //            ]\r\n    //        }\r\n    //    });\r\n    //}\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditDuplicateContentTableCollectionViewElement;\r\nImage\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-duplicate-content-table-collection-view': ContentAuditDuplicateContentTableCollectionViewElement;\r\n    }\r\n}\r\n","export const AUDIT_DUPLICATE_CONTENT_ENTITY_TYPE = 'duplicate-content';\r\nexport const AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE = 'duplicate-content-root';\r\n\r\nexport type AuditDuplicateContentEntityType = typeof AUDIT_DUPLICATE_CONTENT_ENTITY_TYPE;\r\nexport type AuditDuplicateContentRootEntityType = typeof AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE;","import { CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.DuplicateContent';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Duplicate Content Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE,\r\n            headline: 'Duplicate Content'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.DuplicateContent.Collection',\r\n        name: 'Content Audit Duplicate Content Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Duplicate Content Collection Repository',\r\n\t\tapi: () => import('./duplicate-content-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS, CONTENT_AUDIT_DUPLICATE_CONTENT_TABLE_COLLECTION_VIEW_ALIAS } from '../constants';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_DUPLICATE_CONTENT_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Duplicate Content Table Collection View',\r\n\t\tjs: () => import('./table/duplicate-content-table-collection-view.element'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS,\r\n\t\tname: 'Duplicate Content Collection',\r\n\t\telement: () => import('./duplicate-content.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_CARBON_RATING_ENTITY_TYPE = 'carbon-rating';\r\nexport const AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE = 'carbon-rating-root';\r\n\r\nexport type AuditCarbonRatingEntityType = typeof AUDIT_CARBON_RATING_ENTITY_TYPE;\r\nexport type AuditCarbonRatingRootEntityType = typeof AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_2_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.CarbonRating',\r\n    name: 'Carbon Rating Menu Item',\r\n    weight: 900,\r\n    meta: {\r\n        label: 'Carbon Rating',\r\n        icon: 'icon-eco',\r\n        entityType: AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_2_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.CarbonRating';\r\nexport const CONTENT_AUDIT_CARBON_RATING_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.CarbonRating.Table';","export const CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditCarbonRatingCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { PageAnalysisDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-carbon-rating-table-collection-view')\r\nexport class ContentAuditCarbonRatingTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Content Type',\r\n            alias: 'contentType'\r\n        },\r\n        {\r\n            name: 'Page Size',\r\n            alias: 'pageSize'\r\n        },\r\n        {\r\n            name: 'Carbon Rating',\r\n            alias: 'carbonRating',\r\n            elementName: 'content-audit-carbon-intensity-label'\r\n        },\r\n        {\r\n            name: 'Emissions Per Page View',\r\n            alias: 'emissionsPerPageView'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<PageAnalysisDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(pages: PageAnalysisDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = pages.map((page) => {\r\n            const modalEditPath =\r\n                routeBuilder({ entityType: page.entityType }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.unique });\r\n\r\n            return {\r\n                id: page?.unique,\r\n                entityType: page?.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${modalEditPath}>${page.pageData?.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'contentType',\r\n                        value: page.technicalSeoData?.contentType,\r\n                    },\r\n                    {\r\n                        columnAlias: 'pageSize',\r\n                        value: html`${Math.round(page.performanceData?.totalBytes! / 1024)}KB`\r\n                    },\r\n                    {\r\n                        columnAlias: 'carbonRating',\r\n                        value: page.emissionsData.carbonRating\r\n                    },\r\n                    {\r\n                        columnAlias: 'emissionsPerPageView',\r\n                        value: `${page.emissionsData.emissionsPerPageView}g`\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditCarbonRatingTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-carbon-rating-table-collection-view': ContentAuditCarbonRatingTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.CarbonRating';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Carbon Rating Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE,\r\n            headline: 'Carbon Rating'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.CarbonRating.Collection',\r\n        name: 'Content Audit Carbon Rating Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Carbon Rating Collection Repository',\r\n\t\tapi: () => import('./carbon-rating-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS, CONTENT_AUDIT_CARBON_RATING_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_CARBON_RATING_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Carbon Rating Table Collection View',\r\n\t\tjs: () => import('./table/carbon-rating-table-collection-view.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS,\r\n\t\tname: 'Carbon Rating Collection',\r\n\t\telement: () => import('./carbon-rating.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","export const AUDIT_CORE_WEB_VITALS_ENTITY_TYPE = 'core-web-vitals';\r\nexport const AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE = 'core-web-vitals-root';\r\n\r\nexport type AuditCoreWebVitalsEntityType = typeof AUDIT_CORE_WEB_VITALS_ENTITY_TYPE;\r\nexport type AuditCoreWebVitalsRootEntityType = typeof AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from \"@umbraco-cms/backoffice/menu\";\r\nimport { AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE } from '../entity';\r\nimport { CONTENT_AUDIT_MENU_2_ALIAS } from \"../../constants\";\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'Umb.MenuItem.ContentAudit.CoreWebVitals',\r\n    name: 'Core Web Vitals Menu Item',\r\n    weight: 1000,\r\n    meta: {\r\n        label: 'Core Web Vitals',\r\n        icon: 'icon-speed-gauge',\r\n        entityType: AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE,\r\n        menus: [CONTENT_AUDIT_MENU_2_ALIAS],\r\n    }\r\n};\r\n\r\nexport const manifests = [menuItem];\r\n","export const CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS = 'Umb.Collection.ContentAudit.CoreWebVitals';\r\nexport const CONTENT_AUDIT_CORE_WEB_VITALS_TABLE_COLLECTION_VIEW_ALIAS = 'Umb.CollectionView.ContentAudit.CoreWebVitals.Table';","export const CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS = \"Umb.Repository.ContentAuditCoreWebVitalsCollection\";","import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { PageAnalysisDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-core-web-vitals-table-collection-view')\r\nexport class ContentAuditCoreWebVitalsTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Cumulative Layout Shift',\r\n            alias: 'cumulativeLayoutShift',\r\n            elementName: 'content-audit-metric-label'\r\n        },\r\n        {\r\n            name: 'First Contentful Paint',\r\n            alias: 'firstContentfulPaint',\r\n            elementName: 'content-audit-metric-label'\r\n        },\r\n        {\r\n            name: 'Largest Contentful Paint',\r\n            alias: 'largestContentfulPaint',\r\n            elementName: 'content-audit-metric-label'\r\n        },\r\n        //{\r\n        //    name: 'Time to Interactive',\r\n        //    alias: 'timeToInteractive',\r\n        //    elementName: 'content-audit-metric-label'\r\n        //},\r\n        {\r\n            name: 'Time to First Byte',\r\n            alias: 'timeToFirstByte',\r\n            elementName: 'content-audit-metric-label'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<PageAnalysisDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(pages: PageAnalysisDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = pages.map((page) => {\r\n            const modalEditPath =\r\n                routeBuilder({ entityType: page.entityType }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.unique });\r\n\r\n            return {\r\n                id: page?.unique,\r\n                entityType: page?.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${modalEditPath}>${page.pageData?.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'cumulativeLayoutShift',\r\n                        value: page.performanceData.cumulativeLayoutShift\r\n                    },\r\n                    {\r\n                        columnAlias: 'firstContentfulPaint',\r\n                        value: page.performanceData.firstContentfulPaint\r\n                    },\r\n                    {\r\n                        columnAlias: 'largestContentfulPaint',\r\n                        value: page.performanceData.largestContentfulPaint\r\n                    },\r\n                    //{\r\n                    //    columnAlias: 'timeToInteractive',\r\n                    //    value: page.performanceData.timeToInteractive\r\n                    //},\r\n                    {\r\n                        columnAlias: 'timeToFirstByte',\r\n                        value: page.performanceData.timeToFirstByte\r\n                    },\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditCoreWebVitalsTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-core-web-vitals-table-collection-view': ContentAuditCoreWebVitalsTableCollectionViewElement;\r\n    }\r\n}\r\n","import { CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS } from '../collection';\r\nimport { AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE } from '../entity';\r\n\r\nconst workspaceAlias = 'Umb.Workspace.ContentAudit.CoreWebVitals';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    {\r\n        type: 'workspace',\r\n        kind: 'default',\r\n        alias: workspaceAlias,\r\n        name: 'Core Web Vitals Root Workspace',\r\n        meta: {\r\n            entityType: AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE,\r\n            headline: 'Core Web Vitals'\r\n        }\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        kind: 'collection',\r\n        alias: 'Umb.Workspace.CoreWebVitals.Collection',\r\n        name: 'Content Audit Core Web Vitals Collection Workspace View',\r\n        meta: {\r\n            label: 'Collection',\r\n            icon: 'icon-layers',\r\n            pathname: 'collection',\r\n            collectionAlias: CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: \"Umb.Condition.WorkspaceAlias\",\r\n                match: workspaceAlias\r\n            }\r\n        ]\r\n    }\r\n]","import { CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS } from './constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'repository',\r\n\t\talias: CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS,\r\n\t\tname: 'Core Web Vitals Collection Repository',\r\n\t\tapi: () => import('./core-web-vitals-collection.repository.js'),\r\n\t},\r\n];\r\n","import { UMB_COLLECTION_ALIAS_CONDITION } from '@umbraco-cms/backoffice/collection';\r\nimport { CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS, CONTENT_AUDIT_CORE_WEB_VITALS_TABLE_COLLECTION_VIEW_ALIAS } from '../constants.js';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collectionView',\r\n\t\talias: CONTENT_AUDIT_CORE_WEB_VITALS_TABLE_COLLECTION_VIEW_ALIAS,\r\n\t\tname: 'Core Web Vitals Table Collection View',\r\n\t\tjs: () => import('./table/core-web-vitals-table-collection-view.element.js'),\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Table',\r\n\t\t\ticon: 'icon-list',\r\n\t\t\tpathName: 'table',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: UMB_COLLECTION_ALIAS_CONDITION,\r\n\t\t\t\tmatch: CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];","import { CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS } from './constants';\r\nimport { CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS } from './repository/constants';\r\n\r\nimport { manifests as collectionRepositoryManifests } from './repository/manifests';\r\nimport { manifests as collectionViewManifests } from './views/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'collection',\r\n\t\tkind: 'default',\r\n\t\talias: CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS,\r\n\t\tname: 'Core Web Vitals Collection',\r\n\t\telement: () => import('./core-web-vitals.element'),\r\n\t\tmeta: {\r\n\t\t\trepositoryAlias: CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS\r\n\t\t}\r\n\t},\r\n\t...collectionRepositoryManifests,\r\n\t...collectionViewManifests\r\n];","import { manifests as menuItems } from './menu/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as collectionManifests } from './collection/manifests';\r\n\r\nexport const manifests: Array<UmbExtensionManifest> = [\r\n    ...workspaceManifests,\r\n    ...menuItems,\r\n    ...collectionManifests\r\n]","import { ManifestMenu } from '@umbraco-cms/backoffice/menu';\r\nimport { ManifestSection, ManifestSectionSidebarApp, ManifestSectionView } from '@umbraco-cms/backoffice/section';\r\n\r\nimport { manifests as allPagesManifests } from './all-pages/manifests';\r\nimport { manifests as issuesManifests } from './issues/manifests';\r\nimport { manifests as statusCodesManifests } from './status-codes/manifests';\r\nimport { manifests as orphanedPagesManifests } from './orphaned-pages/manifests';\r\nimport { manifests as imagesAltTextManifests } from './images-alt-text/manifests';\r\nimport { manifests as outboundLinksManifests } from './outbound-links/manifests';\r\nimport { manifests as inboundLinksManifests } from './inbound-links/manifests';\r\nimport { manifests as metadataManifests } from './metadata/manifests';\r\nimport { manifests as duplicateContentManifests } from './duplicate-content/manifests';\r\nimport { manifests as carbonRatingManifests } from './carbon-rating/manifests';\r\nimport { manifests as coreWebVitalsManifests } from './core-web-vitals/manifests';\r\nimport { CONTENT_AUDIT_MENU_0_ALIAS, CONTENT_AUDIT_MENU_1_ALIAS, CONTENT_AUDIT_MENU_2_ALIAS } from './constants';\r\n\r\nconst sectionAlias = 'Umb.Section.ContentAudit';\r\n\r\nconst section: ManifestSection = {\r\n    type: 'section',\r\n    alias: sectionAlias,\r\n    name: 'Content Audit',\r\n    meta: {\r\n        label: 'Audit',\r\n        pathname: 'audit'\r\n    }\r\n}\r\n\r\nconst sectionView: ManifestSectionView = {\r\n    type: 'sectionView',\r\n    alias: 'Umb.SectionView.ContentAudit.Scan',\r\n    name: 'Content Audit Scan Section View',\r\n    element: () => import('./section.element'),\r\n    meta: {\r\n        label: 'Scan',\r\n        icon: 'icon-scan',\r\n        pathname: 'audit-root'\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.SectionAlias',\r\n            match: sectionAlias,\r\n        },\r\n    ]\r\n}\r\n\r\nconst menus: ManifestMenu[] = [\r\n    {\r\n        type: 'menu',\r\n        alias: CONTENT_AUDIT_MENU_0_ALIAS,\r\n        name: 'Audit Menu'\r\n    },\r\n    {\r\n        type: 'menu',\r\n        alias: CONTENT_AUDIT_MENU_1_ALIAS,\r\n        name: 'Content Menu'\r\n    },\r\n    {\r\n        type: 'menu',\r\n        alias: CONTENT_AUDIT_MENU_2_ALIAS,\r\n        name: 'Performance Menu'\r\n    }\r\n]\r\n\r\nconst menuSectionSidebarApps: ManifestSectionSidebarApp[] = [\r\n    {\r\n        type: 'sectionSidebarApp',\r\n        kind: 'menu',\r\n        alias: 'Umb.SidebarMenu.ContentAudit',\r\n        name: 'Content Audit Sidebar Menu',\r\n        meta: {\r\n            label: 'Site Audit',\r\n            menu: CONTENT_AUDIT_MENU_0_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: sectionAlias\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'sectionSidebarApp',\r\n        kind: 'menu',\r\n        alias: 'Umb.SidebarMenu.ContentMetadata',\r\n        name: 'Content Sidebar Menu',\r\n        meta: {\r\n            label: 'Content',\r\n            menu: CONTENT_AUDIT_MENU_1_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: sectionAlias\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'sectionSidebarApp',\r\n        kind: 'menu',\r\n        alias: 'Umb.SidebarMenu.ContentPerformance',\r\n        name: 'Content Performance Sidebar Menu',\r\n        meta: {\r\n            label: 'Performance',\r\n            menu: CONTENT_AUDIT_MENU_2_ALIAS\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: sectionAlias\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const manifests = [\r\n    section,\r\n    sectionView,\r\n    ...menus,\r\n    ...menuSectionSidebarApps,\r\n    ...allPagesManifests,\r\n    ...issuesManifests,\r\n    ...statusCodesManifests,\r\n    ...orphanedPagesManifests,\r\n    ...imagesAltTextManifests,\r\n    ...outboundLinksManifests,\r\n    ...inboundLinksManifests,\r\n    ...metadataManifests,\r\n    ...duplicateContentManifests,\r\n    ...carbonRatingManifests,\r\n    ...coreWebVitalsManifests\r\n]","import { ManifestWorkspace, ManifestWorkspaceView } from '@umbraco-cms/backoffice/workspace';\r\nimport { CONTENT_AUDIT_ENTITY_TYPE, CONTENT_AUDIT_WORKSPACE_ALIAS } from './constants';\r\n\r\nconst workspace: ManifestWorkspace = {\r\n    type: 'workspace',\r\n    alias: CONTENT_AUDIT_WORKSPACE_ALIAS,\r\n    name: 'Content Audit Workspace',\r\n    element: () => import('./workspace.element'),\r\n    meta: {\r\n        entityType: CONTENT_AUDIT_ENTITY_TYPE\r\n    }\r\n};\r\n\r\nconst workspaceViews: ManifestWorkspaceView[] = [\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'Umb.WorkspaceView.ContentAudit.Scan',\r\n        name: 'Content Audit Scan Workspace View',\r\n        element: () => import('./views/overview.element'),\r\n        meta: {\r\n            label: 'Overview',\r\n            pathname: 'overview',\r\n            icon: 'icon-scan'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.WorkspaceAlias',\r\n                match: CONTENT_AUDIT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'Umb.WorkspaceView.ContentAudit.Settings',\r\n        name: 'Content Audit Settings Workspace View',\r\n        element: () => import('./views/settings.element'),\r\n        meta: {\r\n            label: 'Settings',\r\n            pathname: 'settings',\r\n            icon: 'icon-settings-alt'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.WorkspaceAlias',\r\n                match: CONTENT_AUDIT_WORKSPACE_ALIAS\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const manifests = [\r\n    workspace,\r\n    ...workspaceViews\r\n]","export const manifests: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'modal',\r\n\t\talias: 'Umb.ContentAudit.Modal.RunWarning',\r\n\t\tname: 'Run Warning Modal',\r\n\t\telement: () => import('./run-warning/run-warning-modal.element'),\r\n\t},\r\n];\r\n","import { ManifestLocalization } from '@umbraco-cms/backoffice/localization';\r\n\r\nexport const manifests: Array<ManifestLocalization> = [\r\n\t{\r\n\t\ttype: 'localization',\r\n\t\talias: 'Umb.ContentAudit.Localization.En-GB',\r\n\t\tweight: -100,\r\n\t\tname: 'English (UK)',\r\n\t\tmeta: {\r\n\t\t\tculture: 'en',\r\n\t\t},\r\n        js: () => import('../lang/en.ts'),\r\n\t},\r\n]","import { ManifestWorkspaceView } from '@umbraco-cms/backoffice/workspace';\r\n\r\nconst workspaceView: ManifestWorkspaceView = {\r\n    type: 'workspaceView',\r\n    alias: 'Umbraco.Community.ContentAudit.Workspace',\r\n    name: 'ContentAudit Workspace',\r\n    js: () => import('./views/contentaudit-workspace-view.js'),\r\n    weight: 150,\r\n    meta: {\r\n        label: 'Audit',\r\n        pathname: 'audit',\r\n        icon: 'icon-scan'\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.WorkspaceAlias',\r\n            match: 'Umb.Workspace.Document'\r\n        },\r\n    ]\r\n}\r\n\r\nexport const manifests = [workspaceView];","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\n\r\nexport * from './exports.ts';\r\n\r\nimport { manifests as sectionManifests } from './section/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\nimport { manifests as modalManifests } from './modals/manifest';\r\nimport { manifests as localizationManifests } from './localization/manifests';\r\nimport { manifests as documentManifests } from './documents/manifests';\r\nimport { OpenAPI } from './api/index.ts';\r\nimport { ManifestGlobalContext } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { CONTENT_AUDIT_CONTEXT_ALIAS } from './exports.ts';\r\n\r\nconst globalContext: ManifestGlobalContext = {\r\n    type: 'globalContext',\r\n    alias: CONTENT_AUDIT_CONTEXT_ALIAS,\r\n    name: 'Content Audit Workspace Context',\r\n    js: () => import('./context/audit.context')\r\n}\r\n\r\nexport const onInit: UmbEntryPointOnInit = async (host, extensionRegistry) => {\r\n\r\n    extensionRegistry.registerMany([\r\n        globalContext,\r\n        ...sectionManifests,\r\n        ...workspaceManifests,\r\n        ...modalManifests,\r\n        ...localizationManifests,\r\n        ...documentManifests\r\n    ]);\r\n\r\n    host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n        if (!auth) return;\r\n\r\n        const umbOpenApi = auth.getOpenApiConfiguration();\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n        OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n    });\r\n}"],"names":["IssueTypeConfigMap","IssuePriorityConfigMap","ContentAuditIssueTypeLabel","UmbElementMixin","LitElement","config","html","css","__decorateClass","property","customElement","ContentAuditPriorityTypeLabel","ContentAuditStatusCodeLabel","statusCode","nothing","ContentAuditCarbonIntensityLabel","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","transformedBody","AuditService","data","__request","SettingsService","MetricName","MetricRating","ContentAuditMetricLabel","UmbTableSelectedEvent","UmbTableDeselectedEvent","UmbTableOrderedEvent","CONTENT_AUDIT_WORKSPACE_ALIAS","CONTENT_AUDIT_CONTEXT_ALIAS","CONTENT_AUDIT_ENTITY_TYPE","ContentAuditDataSource","host","__privateAdd","_host","__privateSet","tryExecuteAndNotify","__privateGet","ContentAuditSettingsDataSource","ContentAuditRepository","UmbControllerBase","_auditDataSource","_settingsDataSource","ContentAuditContext","_repository","_latestAuditOverview","_pagesWithMissingMetadata","_topIssues","_healthScore","_settings","UmbObjectState","UmbArrayState","x","UMB_WORKSPACE_CONTEXT","CONTENT_AUDIT_CONTEXT_TOKEN","UmbContextToken","t","o","e","s","n$1","r","n","S","c","i","h","a","l","p","d","u","f","b","y","ContentAuditWorkspaceRootElement","ContentAuditWorkspaceRootElement$1","CONTENT_AUDIT_MENU_0_ALIAS","CONTENT_AUDIT_MENU_1_ALIAS","CONTENT_AUDIT_MENU_2_ALIAS","CONTENT_AUDIT_ISSUES_COLLECTION_ALIAS","CONTENT_AUDIT_ISSUES_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_ISSUES_COLLECTION_REPOSITORY_ALIAS","ContentAuditIssuesCollectionDataSource","filter","items","total","ContentAuditIssuesCollectionRepository","UmbRepositoryBase","_collectionSource","ContentAuditIssuesTableNameColumnLayout","UmbTextStyles","_collectionContext","_ContentAuditIssuesTableCollectionViewElement_instances","observeCollectionItems_fn","createTableItems_fn","ContentAuditIssuesTableCollectionViewElement","UmbLitElement","UMB_COLLECTION_CONTEXT","instance","__privateMethod","changedProperties","issues","issue","state","ContentAuditIssuesTableCollectionViewElement$1","AUDIT_ALL_PAGES_ROOT_ENTITY_TYPE","menuItem","manifests","CONTENT_AUDIT_ALL_PAGES_ROOT_WORKSPACE_ALIAS","CONTENT_AUDIT_ALL_PAGES_WORKSPACE_ALIAS","UMB_WORKSPACE_CONDITION_ALIAS","CONTENT_AUDIT_ALL_PAGES_COLLECTION_ALIAS","CONTENT_AUDIT_ALL_PAGES_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_ALL_PAGES_COLLECTION_REPOSITORY_ALIAS","_ContentAuditAllPagesTableCollectionViewElement_instances","ContentAuditAllPagesTableCollectionViewElement","pages","page","_c","ContentAuditAllPagesTableCollectionViewElement$1","allPagesManifests","allPagesRootManifests","allPagesTableCollectionView_element","UMB_COLLECTION_ALIAS_CONDITION","collectionRepositoryManifests","collectionViewManifests","CONTENT_AUDIT_ALL_PAGES_DETAIL_REPOSITORY_ALIAS","CONTENT_AUDIT_ALL_PAGES_DETAIL_STORE_ALIAS","detailManifests","workspaceManifests","menuItems","collectionManifests","repositoryManifests","AUDIT_ISSUES_ROOT_ENTITY_TYPE","CONTENT_AUDIT_ISSUES_ROOT_WORKSPACE_ALIAS","CONTENT_AUDIT_ISSUES_WORKSPACE_ALIAS","issuesManifests","issuesRootManifests","issueCollection_repository","issuesTableCollectionView_element","CONTENT_AUDIT_ISSUES_DETAIL_REPOSITORY_ALIAS","CONTENT_AUDIT_ISSUES_DETAIL_STORE_ALIAS","AUDIT_STATUS_CODES_ROOT_ENTITY_TYPE","CONTENT_AUDIT_STATUS_CODES_COLLECTION_ALIAS","CONTENT_AUDIT_STATUS_CODES_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_STATUS_CODES_COLLECTION_REPOSITORY_ALIAS","_routeBuilder","_ContentAuditStatusCodesTableCollectionViewElement_instances","registerModalRoute_fn","ContentAuditStatusCodesTableCollectionViewElement","UmbModalRouteRegistrationController","UMB_WORKSPACE_MODAL","routeBuilder","modalEditPath","UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN","ContentAuditStatusCodesTableCollectionViewElement$1","workspaceAlias","statusCodesTableCollectionView_element","AUDIT_ORPHANED_PAGES_ROOT_ENTITY_TYPE","CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_ALIAS","CONTENT_AUDIT_ORPHANED_PAGES_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_ORPHANED_PAGES_COLLECTION_REPOSITORY_ALIAS","_ContentAuditOrphanedPagesTableCollectionViewElement_instances","ContentAuditOrphanedPagesTableCollectionViewElement","urls","ContentAuditOrphanedPagesTableCollectionViewElement$1","orphanedPagesTableCollectionView_element","AUDIT_IMAGES_ALT_TEXT_ROOT_ENTITY_TYPE","CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_ALIAS","CONTENT_AUDIT_IMAGES_ALT_TEXT_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_IMAGES_ALT_TEXT_COLLECTION_REPOSITORY_ALIAS","_ContentAuditImagesAltTextTableCollectionViewElement_instances","ContentAuditImagesAltTextTableCollectionViewElement","images","image","modalDocumentEditPath","ContentAuditImagesAltTextTableCollectionViewElement$1","imagesAltTextTableCollectionView_element","AUDIT_OUTBOUND_LINKS_ROOT_ENTITY_TYPE","CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_ALIAS","CONTENT_AUDIT_OUTBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_OUTBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS","_ContentAuditddOutboundLinksTableCollectionViewElement_instances","ContentAuditddOutboundLinksTableCollectionViewElement","linkGroups","linkGroup","ContentAuditddOutboundLinksTableCollectionViewElement$1","outboundLinksTableCollectionView_element","AUDIT_INBOUND_LINKS_ROOT_ENTITY_TYPE","CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_ALIAS","CONTENT_AUDIT_INBOUND_LINKS_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_INBOUND_LINKS_COLLECTION_REPOSITORY_ALIAS","_ContentAuditInboundLinksTableCollectionViewElement_instances","ContentAuditInboundLinksTableCollectionViewElement","ContentAuditInboundLinksTableCollectionViewElement$1","inboundLinksTableCollectionView_element","AUDIT_METADATA_ROOT_ENTITY_TYPE","CONTENT_AUDIT_METADATA_COLLECTION_ALIAS","CONTENT_AUDIT_METADATA_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_METADATA_COLLECTION_REPOSITORY_ALIAS","CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_ALIAS","CONTENT_AUDIT_DUPLICATE_CONTENT_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_DUPLICATE_CONTENT_COLLECTION_REPOSITORY_ALIAS","ContentAuditDuplicateContentTableCollectionViewElement","ContentAuditDuplicateContentTableCollectionViewElement$1","AUDIT_DUPLICATE_CONTENT_ROOT_ENTITY_TYPE","duplicateContentTableCollectionView_element","AUDIT_CARBON_RATING_ROOT_ENTITY_TYPE","CONTENT_AUDIT_CARBON_RATING_COLLECTION_ALIAS","CONTENT_AUDIT_CARBON_RATING_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_CARBON_RATING_COLLECTION_REPOSITORY_ALIAS","_ContentAuditCarbonRatingTableCollectionViewElement_instances","ContentAuditCarbonRatingTableCollectionViewElement","ContentAuditCarbonRatingTableCollectionViewElement$1","carbonRatingTableCollectionView_element","AUDIT_CORE_WEB_VITALS_ROOT_ENTITY_TYPE","CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_ALIAS","CONTENT_AUDIT_CORE_WEB_VITALS_TABLE_COLLECTION_VIEW_ALIAS","CONTENT_AUDIT_CORE_WEB_VITALS_COLLECTION_REPOSITORY_ALIAS","_ContentAuditCoreWebVitalsTableCollectionViewElement_instances","ContentAuditCoreWebVitalsTableCollectionViewElement","ContentAuditCoreWebVitalsTableCollectionViewElement$1","coreWebVitalsTableCollectionView_element","sectionAlias","section","sectionView","menus","menuSectionSidebarApps","statusCodesManifests","orphanedPagesManifests","imagesAltTextManifests","outboundLinksManifests","inboundLinksManifests","metadataManifests","duplicateContentManifests","carbonRatingManifests","coreWebVitalsManifests","workspace","workspace_element","workspaceViews","workspaceView","globalContext","audit_context","onInit","extensionRegistry","sectionManifests","modalManifests","localizationManifests","documentManifests","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":"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","x_google_ignoreList":[18,19,20]}