{"version":3,"file":"metadata-table-collection-view.element-BeeyFwb8.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/section/metadata/collection/views/table/metadata-table-collection-view.element.ts"],"sourcesContent":["import { UMB_COLLECTION_CONTEXT, UmbDefaultCollectionContext } from '@umbraco-cms/backoffice/collection';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/document';\r\nimport { InternalPageDto } from '../../../../../api';\r\nimport { UmbTableColumn, UmbTableItem, UmbTableConfig } from '../../../../../exports';\r\nimport { UmbModalRouteBuilder, UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\n\r\n@customElement('content-audit-metadata-table-collection-view')\r\nexport class ContentAuditMetdataTableCollectionViewElement extends UmbLitElement {\r\n\r\n    @state()\r\n    private _tableConfig: UmbTableConfig = {\r\n        allowSelection: false,\r\n        hideIcon: true\r\n    };\r\n\r\n    @state()\r\n    private _tableColumns: Array<UmbTableColumn> = [\r\n        {\r\n            name: 'URL',\r\n            alias: 'url',\r\n        },\r\n        {\r\n            name: 'Title',\r\n            alias: 'metaTitle'\r\n        },\r\n        {\r\n            name: 'Description',\r\n            alias: 'metaDescription'\r\n        },\r\n        {\r\n            name: 'Keywords',\r\n            alias: 'metaKeywords'\r\n        },\r\n        {\r\n            name: 'Robots',\r\n            alias: 'metaRobots'\r\n        }\r\n    ];\r\n\r\n    @state()\r\n    private _tableItems: Array<UmbTableItem> = [];\r\n\r\n    #collectionContext?: UmbDefaultCollectionContext<InternalPageDto>;\r\n    #routeBuilder?: UmbModalRouteBuilder;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_COLLECTION_CONTEXT, (instance) => {\r\n            this.#collectionContext = instance;\r\n        });\r\n\r\n        this.#registerModalRoute();\r\n    }\r\n\r\n    #registerModalRoute() {\r\n        new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n            .addAdditionalPath(':entityType')\r\n            .onSetup((params) => {\r\n                return { data: { entityType: params.entityType, preset: {} } };\r\n            })\r\n            .observeRouteBuilder((routeBuilder) => {\r\n                this.#routeBuilder = routeBuilder;\r\n\r\n                this.#observeCollectionItems();\r\n            });\r\n    }\r\n\r\n    #observeCollectionItems() {\r\n        if (!this.#collectionContext) return;\r\n        this.observe(this.#collectionContext.items, (items) => this.#createTableItems(items), 'umbCollectionItemsObserver');\r\n    }\r\n\r\n    #createTableItems(pages: InternalPageDto[]) {\r\n        const routeBuilder = this.#routeBuilder;\r\n        if (!routeBuilder) throw new Error('Route builder not ready');\r\n\r\n        this._tableItems = pages.map((page) => {\r\n            const modalEditPath =\r\n                routeBuilder({ entityType: 'document' }) +\r\n                UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.generateLocal({ unique: page.nodeKey! });\r\n\r\n            return {\r\n                id: page.unique,\r\n                entityType: page.entityType,\r\n                icon: 'icon-alert',\r\n                data: [\r\n                    {\r\n                        columnAlias: 'url',\r\n                        value: html`<a href=${modalEditPath}>${page.url}</a>`\r\n                    },\r\n                    {\r\n                        columnAlias: 'metaTitle',\r\n                        value: page.metaTitle\r\n                    },\r\n                    {\r\n                        columnAlias: 'metaDescription',\r\n                        value: page.metaDescription\r\n                    },\r\n                    {\r\n                        columnAlias: 'metaKeywords',\r\n                        value: page.metaKeywords\r\n                    },\r\n                    {\r\n                        columnAlias: 'metaRobots',\r\n                        value: page.metaRobots\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    override render() {\r\n        if (this._tableItems.length !== 0) {\r\n            return html`\r\n\t\t\t    <umb-table\r\n                    .config=${this._tableConfig}\r\n                    .columns=${this._tableColumns}\r\n                    .items=${this._tableItems}\r\n                ></umb-table>\r\n\t\t    `;\r\n        }\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n    ];\r\n}\r\n\r\nexport default ContentAuditMetdataTableCollectionViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-metadata-table-collection-view': ContentAuditMetdataTableCollectionViewElement;\r\n    }\r\n}\r\n"],"names":["_collectionContext","_routeBuilder","_ContentAuditMetdataTableCollectionViewElement_instances","registerModalRoute_fn","observeCollectionItems_fn","createTableItems_fn","ContentAuditMetdataTableCollectionViewElement","UmbLitElement","__privateAdd","UMB_COLLECTION_CONTEXT","instance","__privateSet","__privateMethod","html","UmbModalRouteRegistrationController","UMB_WORKSPACE_MODAL","params","routeBuilder","__privateGet","items","pages","page","modalEditPath","UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN","css","__decorateClass","state","customElement","ContentAuditMetdataTableCollectionViewElement$1"],"mappings":"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"}