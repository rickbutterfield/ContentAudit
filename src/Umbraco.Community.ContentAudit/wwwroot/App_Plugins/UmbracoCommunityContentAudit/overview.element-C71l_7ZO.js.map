{"version":3,"file":"overview.element-C71l_7ZO.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/workspace/views/overview.element.ts"],"sourcesContent":["import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, nothing, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { IssueDto, OverviewDto, HealthScoreDto, CrawlDto } from \"../../api\";\r\nimport ContentAuditContext, { CONTENT_AUDIT_CONTEXT_TOKEN } from \"../../context/audit.context\";\r\n\r\n@customElement('content-audit-scan-view')\r\nexport class ContentAuditScanViewElement extends UmbElementMixin(LitElement) {\r\n    private crawlData: CrawlDto[] = [];\r\n\r\n    #context?: ContentAuditContext;\r\n\r\n    @state()\r\n    scanRunning?: boolean = false;\r\n\r\n    @state()\r\n    _latestAuditOverview?: OverviewDto;\r\n\r\n    @state()\r\n    _topIssues: Array<IssueDto> = [];\r\n\r\n    @state()\r\n    _healthScore?: HealthScoreDto;\r\n\r\n    @state()\r\n    _pagesWithoutErrors?: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(CONTENT_AUDIT_CONTEXT_TOKEN, (context) => {\r\n            this.#context = context;\r\n\r\n            this.observe(context.latestAuditOverview, (latestAuditOverview) => {\r\n                this._latestAuditOverview = latestAuditOverview;\r\n            });\r\n\r\n            this.observe(context.topIssues, (topIssues) => {\r\n                this._topIssues = topIssues;\r\n            });\r\n\r\n            this.observe(context.healthScore, (healthScore) => {\r\n                this._healthScore = healthScore;\r\n                if (this._healthScore != undefined) {\r\n                    this._pagesWithoutErrors = this._healthScore.totalPages - this._healthScore.pagesWithErrors;\r\n                }\r\n            });\r\n\r\n            this.#init();\r\n        });\r\n    }\r\n\r\n    #init() {\r\n        this.#context?.getLatestAuditOverview();\r\n        this.#context?.getTopIssues();\r\n        this.#context?.getHealthScore();\r\n    }\r\n\r\n    startAudit() {\r\n        const eventSource = new EventSource('/umbraco/content-audit/api/v1/start-crawl');\r\n\r\n        this.scanRunning = true;\r\n        this.crawlData = [];\r\n\r\n        eventSource.onmessage = (event) => {\r\n            const data: CrawlDto = JSON.parse(event.data);\r\n            this.crawlData.push(data);\r\n            this.requestUpdate();\r\n        };\r\n\r\n        eventSource.onerror = (error) => {\r\n            if (eventSource.readyState === EventSource.CLOSED) {\r\n                console.log('EventSource connection closed by the server.');\r\n            } else {\r\n                console.error('EventSource encountered an error:', error);\r\n            }\r\n            this.scanRunning = false;\r\n            this.#init();\r\n            eventSource.close();\r\n        };\r\n    }\r\n\r\n    #renderScanBox() {\r\n        if (!this.scanRunning) {\r\n            if (this._latestAuditOverview?.runDate == null) {\r\n                return html`<p>No scan has been run yet</p>`;\r\n            }\r\n            else {\r\n                return html`\r\n                    <p><strong>URLs found: </strong> ${this._latestAuditOverview?.total}</p>\r\n                    <p><strong>Internal URLs: </strong> ${this._latestAuditOverview?.totalInternal}</p>\r\n                    <p><strong>External URLs: </strong> ${this._latestAuditOverview?.totalExternal}</p>\r\n                    <p><strong>Asset URLs: </strong> ${this._latestAuditOverview?.totalAssets}</p>\r\n                    <p><strong>Blocked URLs: </strong> ${this._latestAuditOverview?.totalBlocked}</p>\r\n                `\r\n            }\r\n        }\r\n        else {\r\n            const total = this.crawlData.length;\r\n            const internal = this.crawlData.filter(x => x.crawled && !x.external && !x.asset).length;\r\n            const external = this.crawlData.filter(x => x.crawled && x.external && !x.asset).length;\r\n            const assets = this.crawlData.filter(x => x.crawled && x.asset).length;\r\n            const blocked = this.crawlData.filter(x => x.blocked).length;\r\n\r\n            return html`\r\n                <uui-loader-bar></uui-loader-bar>\r\n                <p><strong>URLs found: </strong> ${total}</p>\r\n                <p><strong>Internal URLs: </strong> ${internal}</p>\r\n                <p><strong>External URLs: </strong> ${external}</p>\r\n                <p><strong>Asset URLs: </strong> ${assets}</p>\r\n                <p><strong>Blocked URLs: </strong> ${blocked}</p>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderLatestAudit() {\r\n        if (this._latestAuditOverview !== undefined) {\r\n            return html`\r\n                <uui-box headline=\"Latest audit\" class=\"span-2\">\r\n                    <div slot=\"header\">\r\n                        ${this._latestAuditOverview?.runDate != null ? this.localize.date(this._latestAuditOverview?.runDate!, { dateStyle: 'long', timeStyle: 'short' }) : nothing}\r\n                    </div>\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button\r\n                            look=\"primary\"\r\n                            @click=${this.startAudit}\r\n                            .state=${this.scanRunning ? \"waiting\" : \"\"}\r\n                        >Run new scan</uui-button>\r\n                    </div>\r\n\r\n                    ${this.#renderScanBox()}\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderHealthScore() {\r\n        if (this._healthScore !== undefined) {\r\n            let scoreClass = \"score--danger\";\r\n\r\n            if (this._healthScore.healthScore >= 90) {\r\n                scoreClass = \"score--success\";\r\n            }\r\n\r\n            if (this._healthScore.healthScore >= 50) {\r\n                scoreClass = \"score--warning\";\r\n            }\r\n\r\n            return html`\r\n                <uui-box headline=\"Site health\">\r\n                    <div class=\"score\">\r\n                        <svg viewBox=\"0 0 36 36\" class=\"score__inner ${scoreClass}\">\r\n                            <path class=\"score__bg\"\r\n                                d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <path class=\"score__fill\"\r\n                                stroke-dasharray=\"${this._healthScore.healthScore}, 100\"\r\n                                d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                        </svg>\r\n                        <p class=\"score__text\">${this._healthScore.healthScore.toFixed(0)} / 100</p>\r\n                    </div>\r\n                </uui-box>\r\n            `;\r\n        }\r\n    }\r\n\r\n    #renderTopIssues() {\r\n        if (this._topIssues.length !== 0) {\r\n            return html`\r\n                <uui-box headline=\"Top issues\" class=\"span-3\" style=\"--uui-box-default-padding: 0;\">\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button look=\"secondary\" href=\"/umbraco/section/audit/workspace/issues-root\">See all issues</uui-button>\r\n                    </div>\r\n                    <content-audit-issues-table-collection-view .data=${this._topIssues}></content-audit-issues-table-collection-view>\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <div id=\"main\">\r\n                ${this.#renderLatestAudit()}\r\n                ${this.#renderHealthScore()}\r\n                ${this.#renderTopIssues()}\r\n            </div>\r\n        `\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: var(--uui-size-space-5);\r\n            }\r\n\r\n            #main {\r\n                display: grid;\r\n                gap: var(--uui-size-space-5); \r\n                grid-template-columns: repeat(3, 1fr);\r\n            }\r\n\r\n            .span-2 {\r\n                grid-column: span 2;\r\n            }\r\n\r\n            .span-3 {\r\n                grid-column: span 3;\r\n            }\r\n\r\n            .score {\r\n                text-align: center;\r\n                position: relative;\r\n            }\r\n\r\n            .score__inner {\r\n                width: 200px;\r\n                height: 200px;\r\n            }\r\n\r\n            .score__bg {\r\n                fill: none;\r\n                stroke: #eee;\r\n                stroke-width: 1.75;\r\n            }\r\n\r\n            .score__fill {\r\n                fill: none;\r\n                stroke: none;\r\n                stroke-width: 1.75;\r\n                stroke-linecap: round;\r\n                animation: progress 1000ms ease-out forwards;\r\n                stroke: #000;\r\n            }\r\n\r\n            .score--danger .score__fill {\r\n                stroke: var(--uui-color-danger, #d42054);\r\n            }\r\n\r\n            .score--warning .score__fill {\r\n                stroke: var(--uui-color-warning, #fbd142);\r\n            }\r\n\r\n            .score--success .score__fill {\r\n                stroke: var(--uui-color-positive);\r\n            }\r\n\r\n            .score__text {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                position: absolute;\r\n                top: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                z-index: 1;\r\n                font-weight: 700;\r\n            }\r\n\r\n            @keyframes progress {\r\n                0% {\r\n                    stroke-dasharray: 0 100;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditScanViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-scan-view': ContentAuditScanViewElement;\r\n    }\r\n}\r\n"],"names":["_context","_ContentAuditScanViewElement_instances","init_fn","renderScanBox_fn","renderLatestAudit_fn","renderHealthScore_fn","renderTopIssues_fn","ContentAuditScanViewElement","UmbElementMixin","LitElement","__privateAdd","CONTENT_AUDIT_CONTEXT_TOKEN","context","__privateSet","latestAuditOverview","topIssues","healthScore","__privateMethod","eventSource","event","data","error","html","_a","__privateGet","_b","_c","total","internal","x","external","assets","blocked","_d","_e","_f","nothing","scoreClass","css","__decorateClass","state","customElement","ContentAuditScanViewElement$1"],"mappings":"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"}