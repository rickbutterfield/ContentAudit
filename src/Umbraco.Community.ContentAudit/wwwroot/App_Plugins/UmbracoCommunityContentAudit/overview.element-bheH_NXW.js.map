{"version":3,"file":"overview.element-bheH_NXW.js","sources":["../../../../Umbraco.Community.ContentAudit.UI/src/modals/run-warning/run-warning-modal.token.ts","../../../../Umbraco.Community.ContentAudit.UI/src/workspace/views/overview.element.ts"],"sourcesContent":["import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport type RunWarningModalData = {\r\n    headline: string;\r\n}\r\n\r\nexport type RunWarningModalValue = {\r\n    run: boolean;\r\n}\r\n\r\nexport const CONTENT_AUDIT_RUN_WARNING_MODAL_TOKEN = new UmbModalToken<RunWarningModalData, RunWarningModalValue>('Umb.ContentAudit.Modal.RunWarning', {\r\n    modal: {\r\n        type: 'dialog',\r\n        size: 'small'\r\n    }\r\n});","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { css, customElement, html, LitElement, nothing, repeat, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { IssueDto, OverviewDto, HealthScoreDto, CrawlDto } from \"../../api\";\r\nimport ContentAuditContext, { CONTENT_AUDIT_CONTEXT_TOKEN } from \"../../context/audit.context\";\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from \"@umbraco-cms/backoffice/modal\";\r\nimport { CONTENT_AUDIT_RUN_WARNING_MODAL_TOKEN } from \"../../modals\";\r\nimport { UMB_NOTIFICATION_CONTEXT } from \"@umbraco-cms/backoffice/notification\";\r\n\r\n@customElement('content-audit-scan-view')\r\nexport class ContentAuditScanViewElement extends UmbElementMixin(LitElement) {\r\n    private crawlData: CrawlDto[] = [];\r\n\r\n    #context?: ContentAuditContext;\r\n    #modalManagerContext?: typeof UMB_MODAL_MANAGER_CONTEXT.TYPE;\r\n    #notificationContext?: typeof UMB_NOTIFICATION_CONTEXT.TYPE;\r\n\r\n    @state()\r\n    scanRunning?: boolean = false;\r\n\r\n    @state()\r\n    _latestAuditOverview?: OverviewDto;\r\n\r\n    @state()\r\n    _topIssues: Array<IssueDto> = [];\r\n\r\n    @state()\r\n    _healthScore?: HealthScoreDto;\r\n\r\n    @state()\r\n    _pagesWithoutErrors?: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\r\n            this.#notificationContext = instance;\r\n        });\r\n\r\n        this.consumeContext(CONTENT_AUDIT_CONTEXT_TOKEN, (context) => {\r\n            this.#context = context;\r\n\r\n            this.observe(context.latestAuditOverview, (latestAuditOverview) => {\r\n                this._latestAuditOverview = latestAuditOverview;\r\n            });\r\n\r\n            this.observe(context.topIssues, (topIssues) => {\r\n                this._topIssues = topIssues.filter(x => x.numberOfUrls != 0)\r\n            });\r\n\r\n            this.observe(context.healthScore, (healthScore) => {\r\n                this._healthScore = healthScore;\r\n                if (this._healthScore != undefined) {\r\n                    this._pagesWithoutErrors = this._healthScore.totalPages - this._healthScore.pagesWithErrors;\r\n                }\r\n            });\r\n\r\n            this.#init();\r\n        });\r\n\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n            this.#modalManagerContext = instance;\r\n        });\r\n    }\r\n\r\n    #init() {\r\n        this.#context?.getLatestAuditOverview();\r\n        this.#context?.getTopIssues();\r\n        this.#context?.getHealthScore();\r\n    }\r\n\r\n    private async _openModal() {\r\n        const modal = this.#modalManagerContext?.open(this, CONTENT_AUDIT_RUN_WARNING_MODAL_TOKEN, {\r\n            data: {\r\n                headline: \"Ready to run an audit?\",\r\n            }\r\n        });\r\n\r\n        const result = await modal?.onSubmit();\r\n        if (result?.run) {\r\n            this.startAudit();\r\n        }\r\n    }\r\n\r\n    startAudit() {\r\n        const eventSource = new EventSource('/umbraco/content-audit/api/v1/start-crawl');\r\n\r\n        this.scanRunning = true;\r\n        this.crawlData = [];\r\n        this.#notificationContext?.peek(\"positive\", {\r\n            data: {\r\n                headline: 'Crawl started',\r\n                message: 'You will be notified when it is complete.'\r\n            }\r\n        });\r\n\r\n        eventSource.onmessage = (event) => {\r\n            const data: CrawlDto = JSON.parse(event.data);\r\n            this.crawlData.push(data);\r\n            this.requestUpdate();\r\n        };\r\n\r\n        eventSource.onerror = (error) => {\r\n            if (eventSource.readyState === EventSource.CLOSED) {\r\n                console.log('EventSource connection closed by the server.');\r\n            } else {\r\n                console.error('EventSource encountered an error:', error);\r\n            }\r\n            this.scanRunning = false;\r\n            this.#init();\r\n\r\n            this.#notificationContext?.peek(\"default\", {\r\n                data: {\r\n                    headline: 'Crawl completed',\r\n                    message: 'You can now view the results.',\r\n                }\r\n            });\r\n\r\n            eventSource.close();\r\n        };\r\n    }\r\n\r\n    #renderScanBox() {\r\n        if (!this.scanRunning) {\r\n            if (this._latestAuditOverview?.runDate == null) {\r\n                return html`<p>No scan has been run yet</p>`;\r\n            }\r\n            else {\r\n                return html`\r\n                    <uui-table>\r\n                        <uui-table-column></uui-table-column>\r\n                        <uui-table-column></uui-table-column>\r\n\r\n                        <uui-table-row>\r\n                            <uui-table-cell>Total URLs:</uui-table-cell>\r\n                            <uui-table-cell>${this._latestAuditOverview?.total}</uui-table-cell>\r\n                        </uui-table-row>\r\n                        <uui-table-row>\r\n                            <uui-table-cell>Internal URLs:</uui-table-cell>\r\n                            <uui-table-cell>${this._latestAuditOverview?.totalInternal}</uui-table-cell>\r\n                        </uui-table-row>\r\n                        <uui-table-row>\r\n                            <uui-table-cell>External URLs:</uui-table-cell>\r\n                            <uui-table-cell>${this._latestAuditOverview?.totalExternal}</uui-table-cell>\r\n                        </uui-table-row>\r\n                        <uui-table-row>\r\n                            <uui-table-cell>Asset URLs:</uui-table-cell>\r\n                            <uui-table-cell>${this._latestAuditOverview?.totalAssets}</uui-table-cell>\r\n                        </uui-table-row>\r\n                        <uui-table-row>\r\n                            <uui-table-cell>Blocked URLs:</uui-table-cell>\r\n                            <uui-table-cell>${this._latestAuditOverview?.totalBlocked}</uui-table-cell>\r\n                        </uui-table-row>\r\n                    </uui-table>\r\n                `\r\n            }\r\n        }\r\n        else {\r\n            const total = this.crawlData.length;\r\n            const internal = this.crawlData.filter(x => x.crawled && !x.external && !x.asset).length;\r\n            const external = this.crawlData.filter(x => x.crawled && x.external && !x.asset).length;\r\n            const assets = this.crawlData.filter(x => x.crawled && x.asset).length;\r\n            const blocked = this.crawlData.filter(x => x.blocked).length;\r\n\r\n            return html`\r\n                <uui-loader-bar></uui-loader-bar>\r\n\r\n                <uui-table>\r\n                    <uui-table-column></uui-table-column>\r\n                    <uui-table-column></uui-table-column>\r\n\r\n                    <uui-table-row>\r\n                        <uui-table-cell>URLs crawled:</uui-table-cell>\r\n                        <uui-table-cell>${total}</uui-table-cell>\r\n                    </uui-table-row>\r\n                    <uui-table-row>\r\n                        <uui-table-cell>Internal URLs:</uui-table-cell>\r\n                        <uui-table-cell>${internal}</uui-table-cell>\r\n                    </uui-table-row>\r\n                    <uui-table-row>\r\n                        <uui-table-cell>External URLs:</uui-table-cell>\r\n                        <uui-table-cell>${external}</uui-table-cell>\r\n                    </uui-table-row>\r\n                    <uui-table-row>\r\n                        <uui-table-cell>Asset URLs:</uui-table-cell>\r\n                        <uui-table-cell>${assets}</uui-table-cell>\r\n                    </uui-table-row>\r\n                    <uui-table-row>\r\n                        <uui-table-cell>Blocked URLs:</uui-table-cell>\r\n                        <uui-table-cell>${blocked}</uui-table-cell>\r\n                    </uui-table-row>\r\n                </uui-table>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderLatestAudit() {\r\n        if (this._latestAuditOverview !== undefined) {\r\n            return html`\r\n                <uui-box headline=\"Latest audit\" class=\"span-2\" style=\"${this._latestAuditOverview?.runDate != null || this.scanRunning ? '--uui-box-default-padding: 0;' : ''}\">\r\n                    <div slot=\"header\">\r\n                        ${this._latestAuditOverview?.runDate != null ? this.localize.date(this._latestAuditOverview?.runDate!, { dateStyle: 'long', timeStyle: 'short' }) : nothing}\r\n                    </div>\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button\r\n                            look=\"primary\"\r\n                            @click=${this._openModal}\r\n                            .state=${this.scanRunning ? \"waiting\" : \"\"}\r\n                        >Run new scan</uui-button>\r\n                    </div>\r\n\r\n                    ${this.#renderScanBox()}\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderHealthScore() {\r\n        if (this._healthScore !== undefined) {\r\n            let scoreClass = \"score--danger\";\r\n\r\n            if (this._healthScore.healthScore >= 90) {\r\n                scoreClass = \"score--success\";\r\n            }\r\n\r\n            else if (this._healthScore.healthScore >= 50) {\r\n                scoreClass = \"score--warning\";\r\n            }\r\n\r\n            return html`\r\n                <uui-box headline=\"Site health\">\r\n                    <div class=\"score\">\r\n                        <svg viewBox=\"0 0 36 36\" class=\"score__inner ${scoreClass}\">\r\n                            <path class=\"score__bg\"\r\n                                d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <path class=\"score__fill\"\r\n                                stroke-dasharray=\"${this._healthScore.healthScore}, 100\"\r\n                                d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                        </svg>\r\n                        <p class=\"score__text\">${this._healthScore.healthScore.toFixed(0)} / 100</p>\r\n                    </div>\r\n                </uui-box>\r\n            `;\r\n        }\r\n    }\r\n\r\n    _renderScanData() {\r\n        if (this.crawlData.length !== 0) {\r\n            const total = this.crawlData.length;\r\n            const internal = this.crawlData.filter(x => x.crawled && !x.external && !x.asset).length;\r\n            const external = this.crawlData.filter(x => x.crawled && x.external && !x.asset).length;\r\n            const assets = this.crawlData.filter(x => x.crawled && x.asset).length;\r\n            const blocked = this.crawlData.filter(x => x.blocked).length;\r\n\r\n            return html`\r\n                <uui-box headline=\"Debug scan data\" class=\"span-3\">\r\n                    <p>Total: ${total}</p>\r\n                    <p>Internal: ${internal}</p>\r\n                    <p>External: ${external}</p>\r\n                    <p>Assets: ${assets}</p>\r\n                    <p>Blocked: ${blocked}</p>\r\n\r\n                    ${repeat(\r\n                        this.crawlData,\r\n                        (data) => data.url,\r\n                        (data) => html`${JSON.stringify(data)}<br/>`\r\n                    )}\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    #renderTopIssues() {\r\n        if (this._topIssues.length !== 0) {\r\n            return html`\r\n                <uui-box headline=\"Top issues\" class=\"span-3\" style=\"--uui-box-default-padding: 0;\">\r\n                    <div slot=\"header-actions\">\r\n                        <uui-button look=\"secondary\" href=\"/umbraco/section/audit/workspace/issues-root\">See all issues</uui-button>\r\n                    </div>\r\n                    <content-audit-issues-table-collection-view .data=${this._topIssues}></content-audit-issues-table-collection-view>\r\n                </uui-box>\r\n            `\r\n        }\r\n    }\r\n\r\n    override render() {\r\n        return html`\r\n            <div id=\"main\">\r\n                ${this.#renderLatestAudit()}\r\n                ${this.#renderHealthScore()}\r\n                \r\n                ${this.#renderTopIssues()}\r\n            </div>\r\n        `\r\n    }\r\n\r\n    static override styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: var(--uui-size-space-5);\r\n            }\r\n\r\n            #main {\r\n                display: grid;\r\n                gap: var(--uui-size-space-5); \r\n                grid-template-columns: 1fr 1fr 350px;\r\n            }\r\n\r\n            .span-2 {\r\n                grid-column: span 2;\r\n            }\r\n\r\n            .span-3 {\r\n                grid-column: span 3;\r\n            }\r\n\r\n            .score {\r\n                text-align: center;\r\n                position: relative;\r\n            }\r\n\r\n            .score__inner {\r\n                width: 200px;\r\n                height: 200px;\r\n            }\r\n\r\n            .score__bg {\r\n                fill: none;\r\n                stroke: #eee;\r\n                stroke-width: 1.75;\r\n            }\r\n\r\n            .score__fill {\r\n                fill: none;\r\n                stroke: none;\r\n                stroke-width: 1.75;\r\n                stroke-linecap: round;\r\n                animation: progress 1000ms ease-out forwards;\r\n                stroke: #000;\r\n            }\r\n\r\n            .score--danger .score__fill {\r\n                stroke: var(--uui-color-danger, #d42054);\r\n            }\r\n\r\n            .score--warning .score__fill {\r\n                stroke: var(--uui-color-warning, #fbd142);\r\n            }\r\n\r\n            .score--success .score__fill {\r\n                stroke: var(--uui-color-positive);\r\n            }\r\n\r\n            .score__text {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                position: absolute;\r\n                top: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                right: 0;\r\n                margin: auto;\r\n                z-index: 1;\r\n                font-size: 24px;\r\n                font-weight: 700;\r\n            }\r\n\r\n            @keyframes progress {\r\n                0% {\r\n                    stroke-dasharray: 0 100;\r\n                }\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default ContentAuditScanViewElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'content-audit-scan-view': ContentAuditScanViewElement;\r\n    }\r\n}\r\n"],"names":["CONTENT_AUDIT_RUN_WARNING_MODAL_TOKEN","UmbModalToken","_context","_modalManagerContext","_notificationContext","_ContentAuditScanViewElement_instances","init_fn","renderScanBox_fn","renderLatestAudit_fn","renderHealthScore_fn","renderTopIssues_fn","ContentAuditScanViewElement","UmbElementMixin","LitElement","__privateAdd","UMB_NOTIFICATION_CONTEXT","instance","__privateSet","CONTENT_AUDIT_CONTEXT_TOKEN","context","latestAuditOverview","topIssues","x","healthScore","__privateMethod","UMB_MODAL_MANAGER_CONTEXT","modal","_a","__privateGet","result","eventSource","event","data","error","total","internal","external","assets","blocked","html","repeat","_b","_c","_d","_e","_f","nothing","scoreClass","css","__decorateClass","state","customElement","ContentAuditScanViewElement$1"],"mappings":"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"}