@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Seo1902.Core;
@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Web.Common.Views
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Extensions
@using Microsoft.AspNetCore.Mvc.Razor
@using Microsoft.AspNetCore.Http
@using System.Web
@{
    Layout = null;
    IEnumerable<IPublishedContent> rootNodes;

    if (Umbraco.ContentAtRoot().Any(x => x.ContentType.Alias == Seo1902.Core.Settings.PackageXMlAlias || x.ContentType.Alias == Seo1902.Core.Settings.PackageDocumentTypeAlias))
    {
        rootNodes = Umbraco.ContentAtRoot()
            .Where(x => !(x.ContentType.Alias == Seo1902.Core.Settings.PackageXMlAlias || x.ContentType.Alias == Seo1902.Core.Settings.PackageDocumentTypeAlias));
    }
    else
    {
        rootNodes = Umbraco.ContentAtRoot()
        .Where(x => !(x.ContentType.Alias == Seo1902.Core.Settings.PackageXMlAlias || x.ContentType.Alias == Seo1902.Core.Settings.PackageDocumentTypeAlias) && x.Id == Model.Root().Id);
    }
}
@*<?xml version="1.0" encoding="UTF-8" ?>*@
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
        xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">

    @if (rootNodes != null && rootNodes.Count() > 0)
    {
        foreach (var root in rootNodes)
        {
            if (root.ContentType.Alias != Seo1902.Core.Settings.PackageDocumentTypeAlias)
            {
                ListChildNodes(root, true);
            }
        }
    }
</urlset>

@functions { 
    void ListChildNodes(IPublishedContent startNode, bool isIncludeRoot = false)
    {
        Context.Response.ContentType = "text/xml";
        const int maxLevelForSiteMap = 100;
        var nodes = startNode.Children
            .Where(n => n.TemplateId > 0)
            .Select(n => n);

        if (isIncludeRoot)
        {
            if ((!startNode.HasProperty(PageAliases.NoIndex) || !startNode.Value<bool>(PageAliases.NoIndex)))
            {
                var rootDynamicNode = startNode;
    <url>
        <loc>@HttpUtility.UrlEncode((((IPublishedContent)rootDynamicNode).Url(mode: UrlMode.Absolute))).Replace("%3a", ":").Replace("%2f", "/")</loc>
        <lastmod>@rootDynamicNode.UpdateDate.ToString("s")+00:00</lastmod>
        @if ((rootDynamicNode.Value<string>("siteMapChangeFrequency1902seo") ?? "") != "")
        {<changefreq>@(rootDynamicNode.Value<string>("siteMapChangeFrequency1902seo"))</changefreq>}
        @if ((rootDynamicNode.Value<string>("siteMapPriority1902Seo") ?? "") != "")
        {<priority>@(rootDynamicNode.Value<string>("siteMapPriority1902Seo"))</priority>}
    </url>
            }
        }

        foreach (var node in nodes)
        {
            if (node.ContentType.Alias == Seo1902.Core.Settings.PackageXMlAlias)
            {
                continue;
            }

            if (!node.HasProperty(PageAliases.NoIndex) || !node.Value<bool>
                (PageAliases.NoIndex))
            {
        <url>
            <loc>@HttpUtility.UrlEncode((((IPublishedContent)node).Url(mode: UrlMode.Absolute))).Replace("%3a", ":").Replace("%2f", "/")</loc>
            <lastmod>@node.UpdateDate.ToString("s")+00:00</lastmod>
            @if ((node.Value<string>("siteMapChangeFrequency1902seo") ?? "") != "")
            {<changefreq>@(node.Value<string>("siteMapChangeFrequency1902seo"))</changefreq>}
            @if ((node.Value<string>("siteMapPriority1902Seo") ?? "") != "")
            {<priority>@(node.Value<string>("siteMapPriority1902Seo"))</priority>}
        </url>

            }

            if (node.Level <= maxLevelForSiteMap)
            {
                ListChildNodes(node);
            }
        }
    }
}
    