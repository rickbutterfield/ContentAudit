// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetAllImagesData, GetAllImagesResponse, GetAllIssuesData, GetAllIssuesResponse, GetDuplicateContentUrlsData, GetDuplicateContentUrlsResponse, GetExternalLinksData, GetExternalLinksResponse, GetHealthScoreResponse, GetInteralLinksData, GetInteralLinksResponse, GetIssueData, GetIssueResponse, GetLatestAuditOverviewResponse, GetLatestAuditDataData, GetLatestAuditDataResponse, GetLatestPageAuditDataData, GetLatestPageAuditDataResponse, GetPagesWithMissingMetadataData, GetPagesWithMissingMetadataResponse, GetOrphanedPagesData, GetOrphanedPagesResponse, StartCrawlResponse, GetSettingsResponse } from './types.gen';

export class AuditService {
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getAllImages(data: GetAllImagesData = {}): CancelablePromise<GetAllImagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/all-images',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @returns unknown OK
     * @throws ApiError
     */
    public static getAllIssues(data: GetAllIssuesData = {}): CancelablePromise<GetAllIssuesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/all-issues',
            query: {
                skip: data.skip,
                take: data.take
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getDuplicateContentUrls(data: GetDuplicateContentUrlsData = {}): CancelablePromise<GetDuplicateContentUrlsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/duplicate-content',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getExternalLinks(data: GetExternalLinksData = {}): CancelablePromise<GetExternalLinksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/external-links',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getHealthScore(): CancelablePromise<GetHealthScoreResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/health-score'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getInteralLinks(data: GetInteralLinksData = {}): CancelablePromise<GetInteralLinksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/internal-links',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.issueGuid
     * @returns unknown OK
     * @throws ApiError
     */
    public static getIssue(data: GetIssueData = {}): CancelablePromise<GetIssueResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/issue',
            query: {
                issueGuid: data.issueGuid
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getLatestAuditOverview(): CancelablePromise<GetLatestAuditOverviewResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/latest-audit'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @param data.statusCode
     * @returns unknown OK
     * @throws ApiError
     */
    public static getLatestAuditData(data: GetLatestAuditDataData = {}): CancelablePromise<GetLatestAuditDataResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/latest-data',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter,
                statusCode: data.statusCode
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.unique
     * @returns unknown OK
     * @throws ApiError
     */
    public static getLatestPageAuditData(data: GetLatestPageAuditDataData = {}): CancelablePromise<GetLatestPageAuditDataResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/latest-page-data',
            query: {
                unique: data.unique
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getPagesWithMissingMetadata(data: GetPagesWithMissingMetadataData = {}): CancelablePromise<GetPagesWithMissingMetadataResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/missing-metadata',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.skip
     * @param data.take
     * @param data.filter
     * @returns unknown OK
     * @throws ApiError
     */
    public static getOrphanedPages(data: GetOrphanedPagesData = {}): CancelablePromise<GetOrphanedPagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/orphaned-pages',
            query: {
                skip: data.skip,
                take: data.take,
                filter: data.filter
            }
        });
    }
    
}

export class CrawlService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static startCrawl(): CancelablePromise<StartCrawlResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/start-crawl'
        });
    }
    
}

export class SettingsService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getSettings(): CancelablePromise<GetSettingsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/content-audit/api/v1/get-settings'
        });
    }
    
}