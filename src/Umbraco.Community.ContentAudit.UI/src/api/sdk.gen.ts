// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetAllImagesData, GetAllImagesResponse, GetAllIssuesData, GetAllIssuesResponse, GetDuplicateContentUrlsData, GetDuplicateContentUrlsResponse, GetExportDataData, GetExportDataResponse, GetExternalLinksData, GetExternalLinksResponse, GetHealthScoreData, GetHealthScoreResponse, GetInteralLinksData, GetInteralLinksResponse, GetIssueData, GetIssueResponse, GetLatestAuditOverviewData, GetLatestAuditOverviewResponse, GetLatestAuditDataData, GetLatestAuditDataResponse, GetLatestPageAuditDataData, GetLatestPageAuditDataResponse, GetPagesWithMissingMetadataData, GetPagesWithMissingMetadataResponse, GetOrphanedPagesData, GetOrphanedPagesResponse, StartCrawlData, StartCrawlResponse, GetSettingsData, GetSettingsResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class AuditService {
    public static getAllImages<ThrowOnError extends boolean = true>(options?: Options<GetAllImagesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetAllImagesResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/all-images',
            ...options
        });
    }
    
    public static getAllIssues<ThrowOnError extends boolean = true>(options?: Options<GetAllIssuesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetAllIssuesResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/all-issues',
            ...options
        });
    }
    
    public static getDuplicateContentUrls<ThrowOnError extends boolean = true>(options?: Options<GetDuplicateContentUrlsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetDuplicateContentUrlsResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/duplicate-content',
            ...options
        });
    }
    
    public static getExportData<ThrowOnError extends boolean = true>(options?: Options<GetExportDataData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetExportDataResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/export',
            ...options
        });
    }
    
    public static getExternalLinks<ThrowOnError extends boolean = true>(options?: Options<GetExternalLinksData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetExternalLinksResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/external-links',
            ...options
        });
    }
    
    public static getHealthScore<ThrowOnError extends boolean = true>(options?: Options<GetHealthScoreData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetHealthScoreResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/health-score',
            ...options
        });
    }
    
    public static getInteralLinks<ThrowOnError extends boolean = true>(options?: Options<GetInteralLinksData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetInteralLinksResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/internal-links',
            ...options
        });
    }
    
    public static getIssue<ThrowOnError extends boolean = true>(options?: Options<GetIssueData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetIssueResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/issue',
            ...options
        });
    }
    
    public static getLatestAuditOverview<ThrowOnError extends boolean = true>(options?: Options<GetLatestAuditOverviewData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestAuditOverviewResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/latest-audit',
            ...options
        });
    }
    
    public static getLatestAuditData<ThrowOnError extends boolean = true>(options?: Options<GetLatestAuditDataData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestAuditDataResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/latest-data',
            ...options
        });
    }
    
    public static getLatestPageAuditData<ThrowOnError extends boolean = true>(options?: Options<GetLatestPageAuditDataData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestPageAuditDataResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/latest-page-data',
            ...options
        });
    }
    
    public static getPagesWithMissingMetadata<ThrowOnError extends boolean = true>(options?: Options<GetPagesWithMissingMetadataData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetPagesWithMissingMetadataResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/missing-metadata',
            ...options
        });
    }
    
    public static getOrphanedPages<ThrowOnError extends boolean = true>(options?: Options<GetOrphanedPagesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetOrphanedPagesResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/orphaned-pages',
            ...options
        });
    }
    
}

export class CrawlService {
    public static startCrawl<ThrowOnError extends boolean = true>(options?: Options<StartCrawlData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<StartCrawlResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/start-crawl',
            ...options
        });
    }
    
}

export class SettingsService {
    public static getSettings<ThrowOnError extends boolean = true>(options?: Options<GetSettingsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetSettingsResponse, unknown, ThrowOnError>({
            url: '/umbraco/content-audit/api/v1/get-settings',
            ...options
        });
    }
    
}